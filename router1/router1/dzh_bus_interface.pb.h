// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzh_bus_interface.proto

#ifndef PROTOBUF_dzh_5fbus_5finterface_2eproto__INCLUDED
#define PROTOBUF_dzh_5fbus_5finterface_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dzh_bus_interface {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

class Bus_Head;
class Body;
class RspInfo;
class LoginReq;
class LoginRsp;
class LogoutReq;
class LogoutRsp;
class ServiceRouteReqSToV;
class ServiceRouteRspSToV;
class ServiceRouteReqVToS;
class ServiceRouteStatusNty;
class ServiceRouteReqVToV;
class ServiceRouteRspVToV;

// ===================================================================

class Bus_Head : public ::google::protobuf::Message {
 public:
  Bus_Head();
  virtual ~Bus_Head();

  Bus_Head(const Bus_Head& from);

  inline Bus_Head& operator=(const Bus_Head& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Bus_Head& default_instance();

  void Swap(Bus_Head* other);

  // implements Message ----------------------------------------------

  Bus_Head* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Bus_Head& from);
  void MergeFrom(const Bus_Head& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 BodyType = 1;
  inline bool has_bodytype() const;
  inline void clear_bodytype();
  static const int kBodyTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 bodytype() const;
  inline void set_bodytype(::google::protobuf::uint32 value);

  // required uint32 RequestID = 2;
  inline bool has_requestid() const;
  inline void clear_requestid();
  static const int kRequestIDFieldNumber = 2;
  inline ::google::protobuf::uint32 requestid() const;
  inline void set_requestid(::google::protobuf::uint32 value);

  // required uint32 EndFlag = 3;
  inline bool has_endflag() const;
  inline void clear_endflag();
  static const int kEndFlagFieldNumber = 3;
  inline ::google::protobuf::uint32 endflag() const;
  inline void set_endflag(::google::protobuf::uint32 value);

  // optional .dzh_bus_interface.Body body = 4;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 4;
  inline const ::dzh_bus_interface::Body& body() const;
  inline ::dzh_bus_interface::Body* mutable_body();
  inline ::dzh_bus_interface::Body* release_body();
  inline void set_allocated_body(::dzh_bus_interface::Body* body);

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.Bus_Head)
 private:
  inline void set_has_bodytype();
  inline void clear_has_bodytype();
  inline void set_has_requestid();
  inline void clear_has_requestid();
  inline void set_has_endflag();
  inline void clear_has_endflag();
  inline void set_has_body();
  inline void clear_has_body();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 bodytype_;
  ::google::protobuf::uint32 requestid_;
  ::dzh_bus_interface::Body* body_;
  ::google::protobuf::uint32 endflag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static Bus_Head* default_instance_;
};
// -------------------------------------------------------------------

class Body : public ::google::protobuf::Message {
 public:
  Body();
  virtual ~Body();

  Body(const Body& from);

  inline Body& operator=(const Body& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Body& default_instance();

  void Swap(Body* other);

  // implements Message ----------------------------------------------

  Body* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Body& from);
  void MergeFrom(const Body& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .dzh_bus_interface.LoginReq loginReq = 1;
  inline bool has_loginreq() const;
  inline void clear_loginreq();
  static const int kLoginReqFieldNumber = 1;
  inline const ::dzh_bus_interface::LoginReq& loginreq() const;
  inline ::dzh_bus_interface::LoginReq* mutable_loginreq();
  inline ::dzh_bus_interface::LoginReq* release_loginreq();
  inline void set_allocated_loginreq(::dzh_bus_interface::LoginReq* loginreq);

  // optional .dzh_bus_interface.LoginRsp loginRsp = 2;
  inline bool has_loginrsp() const;
  inline void clear_loginrsp();
  static const int kLoginRspFieldNumber = 2;
  inline const ::dzh_bus_interface::LoginRsp& loginrsp() const;
  inline ::dzh_bus_interface::LoginRsp* mutable_loginrsp();
  inline ::dzh_bus_interface::LoginRsp* release_loginrsp();
  inline void set_allocated_loginrsp(::dzh_bus_interface::LoginRsp* loginrsp);

  // optional .dzh_bus_interface.LogoutReq logoutReq = 3;
  inline bool has_logoutreq() const;
  inline void clear_logoutreq();
  static const int kLogoutReqFieldNumber = 3;
  inline const ::dzh_bus_interface::LogoutReq& logoutreq() const;
  inline ::dzh_bus_interface::LogoutReq* mutable_logoutreq();
  inline ::dzh_bus_interface::LogoutReq* release_logoutreq();
  inline void set_allocated_logoutreq(::dzh_bus_interface::LogoutReq* logoutreq);

  // optional .dzh_bus_interface.LogoutRsp logoutRsp = 4;
  inline bool has_logoutrsp() const;
  inline void clear_logoutrsp();
  static const int kLogoutRspFieldNumber = 4;
  inline const ::dzh_bus_interface::LogoutRsp& logoutrsp() const;
  inline ::dzh_bus_interface::LogoutRsp* mutable_logoutrsp();
  inline ::dzh_bus_interface::LogoutRsp* release_logoutrsp();
  inline void set_allocated_logoutrsp(::dzh_bus_interface::LogoutRsp* logoutrsp);

  // optional .dzh_bus_interface.ServiceRouteReqSToV serviceRouteReqSToV = 5;
  inline bool has_serviceroutereqstov() const;
  inline void clear_serviceroutereqstov();
  static const int kServiceRouteReqSToVFieldNumber = 5;
  inline const ::dzh_bus_interface::ServiceRouteReqSToV& serviceroutereqstov() const;
  inline ::dzh_bus_interface::ServiceRouteReqSToV* mutable_serviceroutereqstov();
  inline ::dzh_bus_interface::ServiceRouteReqSToV* release_serviceroutereqstov();
  inline void set_allocated_serviceroutereqstov(::dzh_bus_interface::ServiceRouteReqSToV* serviceroutereqstov);

  // optional .dzh_bus_interface.ServiceRouteRspSToV serviceRouteRspSToV = 6;
  inline bool has_servicerouterspstov() const;
  inline void clear_servicerouterspstov();
  static const int kServiceRouteRspSToVFieldNumber = 6;
  inline const ::dzh_bus_interface::ServiceRouteRspSToV& servicerouterspstov() const;
  inline ::dzh_bus_interface::ServiceRouteRspSToV* mutable_servicerouterspstov();
  inline ::dzh_bus_interface::ServiceRouteRspSToV* release_servicerouterspstov();
  inline void set_allocated_servicerouterspstov(::dzh_bus_interface::ServiceRouteRspSToV* servicerouterspstov);

  // optional .dzh_bus_interface.ServiceRouteReqVToS serviceRouteReqVToS = 7;
  inline bool has_serviceroutereqvtos() const;
  inline void clear_serviceroutereqvtos();
  static const int kServiceRouteReqVToSFieldNumber = 7;
  inline const ::dzh_bus_interface::ServiceRouteReqVToS& serviceroutereqvtos() const;
  inline ::dzh_bus_interface::ServiceRouteReqVToS* mutable_serviceroutereqvtos();
  inline ::dzh_bus_interface::ServiceRouteReqVToS* release_serviceroutereqvtos();
  inline void set_allocated_serviceroutereqvtos(::dzh_bus_interface::ServiceRouteReqVToS* serviceroutereqvtos);

  // optional .dzh_bus_interface.ServiceRouteStatusNty serviceRouteStatusNty = 8;
  inline bool has_serviceroutestatusnty() const;
  inline void clear_serviceroutestatusnty();
  static const int kServiceRouteStatusNtyFieldNumber = 8;
  inline const ::dzh_bus_interface::ServiceRouteStatusNty& serviceroutestatusnty() const;
  inline ::dzh_bus_interface::ServiceRouteStatusNty* mutable_serviceroutestatusnty();
  inline ::dzh_bus_interface::ServiceRouteStatusNty* release_serviceroutestatusnty();
  inline void set_allocated_serviceroutestatusnty(::dzh_bus_interface::ServiceRouteStatusNty* serviceroutestatusnty);

  // optional .dzh_bus_interface.ServiceRouteReqVToV serviceRouteReqVToV = 9;
  inline bool has_serviceroutereqvtov() const;
  inline void clear_serviceroutereqvtov();
  static const int kServiceRouteReqVToVFieldNumber = 9;
  inline const ::dzh_bus_interface::ServiceRouteReqVToV& serviceroutereqvtov() const;
  inline ::dzh_bus_interface::ServiceRouteReqVToV* mutable_serviceroutereqvtov();
  inline ::dzh_bus_interface::ServiceRouteReqVToV* release_serviceroutereqvtov();
  inline void set_allocated_serviceroutereqvtov(::dzh_bus_interface::ServiceRouteReqVToV* serviceroutereqvtov);

  // optional .dzh_bus_interface.ServiceRouteRspVToV serviceRouteRspVToV = 10;
  inline bool has_servicerouterspvtov() const;
  inline void clear_servicerouterspvtov();
  static const int kServiceRouteRspVToVFieldNumber = 10;
  inline const ::dzh_bus_interface::ServiceRouteRspVToV& servicerouterspvtov() const;
  inline ::dzh_bus_interface::ServiceRouteRspVToV* mutable_servicerouterspvtov();
  inline ::dzh_bus_interface::ServiceRouteRspVToV* release_servicerouterspvtov();
  inline void set_allocated_servicerouterspvtov(::dzh_bus_interface::ServiceRouteRspVToV* servicerouterspvtov);

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.Body)
 private:
  inline void set_has_loginreq();
  inline void clear_has_loginreq();
  inline void set_has_loginrsp();
  inline void clear_has_loginrsp();
  inline void set_has_logoutreq();
  inline void clear_has_logoutreq();
  inline void set_has_logoutrsp();
  inline void clear_has_logoutrsp();
  inline void set_has_serviceroutereqstov();
  inline void clear_has_serviceroutereqstov();
  inline void set_has_servicerouterspstov();
  inline void clear_has_servicerouterspstov();
  inline void set_has_serviceroutereqvtos();
  inline void clear_has_serviceroutereqvtos();
  inline void set_has_serviceroutestatusnty();
  inline void clear_has_serviceroutestatusnty();
  inline void set_has_serviceroutereqvtov();
  inline void clear_has_serviceroutereqvtov();
  inline void set_has_servicerouterspvtov();
  inline void clear_has_servicerouterspvtov();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::dzh_bus_interface::LoginReq* loginreq_;
  ::dzh_bus_interface::LoginRsp* loginrsp_;
  ::dzh_bus_interface::LogoutReq* logoutreq_;
  ::dzh_bus_interface::LogoutRsp* logoutrsp_;
  ::dzh_bus_interface::ServiceRouteReqSToV* serviceroutereqstov_;
  ::dzh_bus_interface::ServiceRouteRspSToV* servicerouterspstov_;
  ::dzh_bus_interface::ServiceRouteReqVToS* serviceroutereqvtos_;
  ::dzh_bus_interface::ServiceRouteStatusNty* serviceroutestatusnty_;
  ::dzh_bus_interface::ServiceRouteReqVToV* serviceroutereqvtov_;
  ::dzh_bus_interface::ServiceRouteRspVToV* servicerouterspvtov_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static Body* default_instance_;
};
// -------------------------------------------------------------------

class RspInfo : public ::google::protobuf::Message {
 public:
  RspInfo();
  virtual ~RspInfo();

  RspInfo(const RspInfo& from);

  inline RspInfo& operator=(const RspInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspInfo& default_instance();

  void Swap(RspInfo* other);

  // implements Message ----------------------------------------------

  RspInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspInfo& from);
  void MergeFrom(const RspInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 RspNo = 1;
  inline bool has_rspno() const;
  inline void clear_rspno();
  static const int kRspNoFieldNumber = 1;
  inline ::google::protobuf::uint32 rspno() const;
  inline void set_rspno(::google::protobuf::uint32 value);

  // required string RspDesc = 2;
  inline bool has_rspdesc() const;
  inline void clear_rspdesc();
  static const int kRspDescFieldNumber = 2;
  inline const ::std::string& rspdesc() const;
  inline void set_rspdesc(const ::std::string& value);
  inline void set_rspdesc(const char* value);
  inline void set_rspdesc(const char* value, size_t size);
  inline ::std::string* mutable_rspdesc();
  inline ::std::string* release_rspdesc();
  inline void set_allocated_rspdesc(::std::string* rspdesc);

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.RspInfo)
 private:
  inline void set_has_rspno();
  inline void clear_has_rspno();
  inline void set_has_rspdesc();
  inline void clear_has_rspdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rspdesc_;
  ::google::protobuf::uint32 rspno_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static RspInfo* default_instance_;
};
// -------------------------------------------------------------------

class LoginReq : public ::google::protobuf::Message {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq& default_instance();

  void Swap(LoginReq* other);

  // implements Message ----------------------------------------------

  LoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RouterNo = 1;
  inline bool has_routerno() const;
  inline void clear_routerno();
  static const int kRouterNoFieldNumber = 1;
  inline ::google::protobuf::uint32 routerno() const;
  inline void set_routerno(::google::protobuf::uint32 value);

  // optional uint32 ServerNo = 2;
  inline bool has_serverno() const;
  inline void clear_serverno();
  static const int kServerNoFieldNumber = 2;
  inline ::google::protobuf::uint32 serverno() const;
  inline void set_serverno(::google::protobuf::uint32 value);

  // repeated uint32 ServiceNo = 3;
  inline int serviceno_size() const;
  inline void clear_serviceno();
  static const int kServiceNoFieldNumber = 3;
  inline ::google::protobuf::uint32 serviceno(int index) const;
  inline void set_serviceno(int index, ::google::protobuf::uint32 value);
  inline void add_serviceno(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      serviceno() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_serviceno();

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.LoginReq)
 private:
  inline void set_has_routerno();
  inline void clear_has_routerno();
  inline void set_has_serverno();
  inline void clear_has_serverno();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 routerno_;
  ::google::protobuf::uint32 serverno_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > serviceno_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static LoginReq* default_instance_;
};
// -------------------------------------------------------------------

class LoginRsp : public ::google::protobuf::Message {
 public:
  LoginRsp();
  virtual ~LoginRsp();

  LoginRsp(const LoginRsp& from);

  inline LoginRsp& operator=(const LoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRsp& default_instance();

  void Swap(LoginRsp* other);

  // implements Message ----------------------------------------------

  LoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRsp& from);
  void MergeFrom(const LoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .dzh_bus_interface.RspInfo rspInfo = 1;
  inline bool has_rspinfo() const;
  inline void clear_rspinfo();
  static const int kRspInfoFieldNumber = 1;
  inline const ::dzh_bus_interface::RspInfo& rspinfo() const;
  inline ::dzh_bus_interface::RspInfo* mutable_rspinfo();
  inline ::dzh_bus_interface::RspInfo* release_rspinfo();
  inline void set_allocated_rspinfo(::dzh_bus_interface::RspInfo* rspinfo);

  // optional uint32 SessionNo = 2;
  inline bool has_sessionno() const;
  inline void clear_sessionno();
  static const int kSessionNoFieldNumber = 2;
  inline ::google::protobuf::uint32 sessionno() const;
  inline void set_sessionno(::google::protobuf::uint32 value);

  // optional uint32 RouterNo = 3;
  inline bool has_routerno() const;
  inline void clear_routerno();
  static const int kRouterNoFieldNumber = 3;
  inline ::google::protobuf::uint32 routerno() const;
  inline void set_routerno(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.LoginRsp)
 private:
  inline void set_has_rspinfo();
  inline void clear_has_rspinfo();
  inline void set_has_sessionno();
  inline void clear_has_sessionno();
  inline void set_has_routerno();
  inline void clear_has_routerno();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::dzh_bus_interface::RspInfo* rspinfo_;
  ::google::protobuf::uint32 sessionno_;
  ::google::protobuf::uint32 routerno_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static LoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class LogoutReq : public ::google::protobuf::Message {
 public:
  LogoutReq();
  virtual ~LogoutReq();

  LogoutReq(const LogoutReq& from);

  inline LogoutReq& operator=(const LogoutReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutReq& default_instance();

  void Swap(LogoutReq* other);

  // implements Message ----------------------------------------------

  LogoutReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogoutReq& from);
  void MergeFrom(const LogoutReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.LogoutReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static LogoutReq* default_instance_;
};
// -------------------------------------------------------------------

class LogoutRsp : public ::google::protobuf::Message {
 public:
  LogoutRsp();
  virtual ~LogoutRsp();

  LogoutRsp(const LogoutRsp& from);

  inline LogoutRsp& operator=(const LogoutRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutRsp& default_instance();

  void Swap(LogoutRsp* other);

  // implements Message ----------------------------------------------

  LogoutRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogoutRsp& from);
  void MergeFrom(const LogoutRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.LogoutRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static LogoutRsp* default_instance_;
};
// -------------------------------------------------------------------

class ServiceRouteReqSToV : public ::google::protobuf::Message {
 public:
  ServiceRouteReqSToV();
  virtual ~ServiceRouteReqSToV();

  ServiceRouteReqSToV(const ServiceRouteReqSToV& from);

  inline ServiceRouteReqSToV& operator=(const ServiceRouteReqSToV& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceRouteReqSToV& default_instance();

  void Swap(ServiceRouteReqSToV* other);

  // implements Message ----------------------------------------------

  ServiceRouteReqSToV* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServiceRouteReqSToV& from);
  void MergeFrom(const ServiceRouteReqSToV& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 DestRouterNo = 1;
  inline bool has_destrouterno() const;
  inline void clear_destrouterno();
  static const int kDestRouterNoFieldNumber = 1;
  inline ::google::protobuf::uint32 destrouterno() const;
  inline void set_destrouterno(::google::protobuf::uint32 value);

  // optional uint32 DestServerNo = 2;
  inline bool has_destserverno() const;
  inline void clear_destserverno();
  static const int kDestServerNoFieldNumber = 2;
  inline ::google::protobuf::uint32 destserverno() const;
  inline void set_destserverno(::google::protobuf::uint32 value);

  // optional uint32 DestSessionNo = 3;
  inline bool has_destsessionno() const;
  inline void clear_destsessionno();
  static const int kDestSessionNoFieldNumber = 3;
  inline ::google::protobuf::uint32 destsessionno() const;
  inline void set_destsessionno(::google::protobuf::uint32 value);

  // optional uint32 ServiceNo = 4;
  inline bool has_serviceno() const;
  inline void clear_serviceno();
  static const int kServiceNoFieldNumber = 4;
  inline ::google::protobuf::uint32 serviceno() const;
  inline void set_serviceno(::google::protobuf::uint32 value);

  // optional uint32 SeqNo = 5;
  inline bool has_seqno() const;
  inline void clear_seqno();
  static const int kSeqNoFieldNumber = 5;
  inline ::google::protobuf::uint32 seqno() const;
  inline void set_seqno(::google::protobuf::uint32 value);

  // optional uint32 ServiceFlags = 6;
  inline bool has_serviceflags() const;
  inline void clear_serviceflags();
  static const int kServiceFlagsFieldNumber = 6;
  inline ::google::protobuf::uint32 serviceflags() const;
  inline void set_serviceflags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.ServiceRouteReqSToV)
 private:
  inline void set_has_destrouterno();
  inline void clear_has_destrouterno();
  inline void set_has_destserverno();
  inline void clear_has_destserverno();
  inline void set_has_destsessionno();
  inline void clear_has_destsessionno();
  inline void set_has_serviceno();
  inline void clear_has_serviceno();
  inline void set_has_seqno();
  inline void clear_has_seqno();
  inline void set_has_serviceflags();
  inline void clear_has_serviceflags();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 destrouterno_;
  ::google::protobuf::uint32 destserverno_;
  ::google::protobuf::uint32 destsessionno_;
  ::google::protobuf::uint32 serviceno_;
  ::google::protobuf::uint32 seqno_;
  ::google::protobuf::uint32 serviceflags_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static ServiceRouteReqSToV* default_instance_;
};
// -------------------------------------------------------------------

class ServiceRouteRspSToV : public ::google::protobuf::Message {
 public:
  ServiceRouteRspSToV();
  virtual ~ServiceRouteRspSToV();

  ServiceRouteRspSToV(const ServiceRouteRspSToV& from);

  inline ServiceRouteRspSToV& operator=(const ServiceRouteRspSToV& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceRouteRspSToV& default_instance();

  void Swap(ServiceRouteRspSToV* other);

  // implements Message ----------------------------------------------

  ServiceRouteRspSToV* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServiceRouteRspSToV& from);
  void MergeFrom(const ServiceRouteRspSToV& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .dzh_bus_interface.RspInfo rspInfo = 1;
  inline bool has_rspinfo() const;
  inline void clear_rspinfo();
  static const int kRspInfoFieldNumber = 1;
  inline const ::dzh_bus_interface::RspInfo& rspinfo() const;
  inline ::dzh_bus_interface::RspInfo* mutable_rspinfo();
  inline ::dzh_bus_interface::RspInfo* release_rspinfo();
  inline void set_allocated_rspinfo(::dzh_bus_interface::RspInfo* rspinfo);

  // optional uint32 DestRouterNo = 2;
  inline bool has_destrouterno() const;
  inline void clear_destrouterno();
  static const int kDestRouterNoFieldNumber = 2;
  inline ::google::protobuf::uint32 destrouterno() const;
  inline void set_destrouterno(::google::protobuf::uint32 value);

  // optional uint32 DestServerNo = 3;
  inline bool has_destserverno() const;
  inline void clear_destserverno();
  static const int kDestServerNoFieldNumber = 3;
  inline ::google::protobuf::uint32 destserverno() const;
  inline void set_destserverno(::google::protobuf::uint32 value);

  // optional uint32 DestSessionNo = 4;
  inline bool has_destsessionno() const;
  inline void clear_destsessionno();
  static const int kDestSessionNoFieldNumber = 4;
  inline ::google::protobuf::uint32 destsessionno() const;
  inline void set_destsessionno(::google::protobuf::uint32 value);

  // optional uint32 ServiceNo = 5;
  inline bool has_serviceno() const;
  inline void clear_serviceno();
  static const int kServiceNoFieldNumber = 5;
  inline ::google::protobuf::uint32 serviceno() const;
  inline void set_serviceno(::google::protobuf::uint32 value);

  // optional uint32 SeqNo = 6;
  inline bool has_seqno() const;
  inline void clear_seqno();
  static const int kSeqNoFieldNumber = 6;
  inline ::google::protobuf::uint32 seqno() const;
  inline void set_seqno(::google::protobuf::uint32 value);

  // optional uint32 ServiceFlags = 7;
  inline bool has_serviceflags() const;
  inline void clear_serviceflags();
  static const int kServiceFlagsFieldNumber = 7;
  inline ::google::protobuf::uint32 serviceflags() const;
  inline void set_serviceflags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.ServiceRouteRspSToV)
 private:
  inline void set_has_rspinfo();
  inline void clear_has_rspinfo();
  inline void set_has_destrouterno();
  inline void clear_has_destrouterno();
  inline void set_has_destserverno();
  inline void clear_has_destserverno();
  inline void set_has_destsessionno();
  inline void clear_has_destsessionno();
  inline void set_has_serviceno();
  inline void clear_has_serviceno();
  inline void set_has_seqno();
  inline void clear_has_seqno();
  inline void set_has_serviceflags();
  inline void clear_has_serviceflags();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::dzh_bus_interface::RspInfo* rspinfo_;
  ::google::protobuf::uint32 destrouterno_;
  ::google::protobuf::uint32 destserverno_;
  ::google::protobuf::uint32 destsessionno_;
  ::google::protobuf::uint32 serviceno_;
  ::google::protobuf::uint32 seqno_;
  ::google::protobuf::uint32 serviceflags_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static ServiceRouteRspSToV* default_instance_;
};
// -------------------------------------------------------------------

class ServiceRouteReqVToS : public ::google::protobuf::Message {
 public:
  ServiceRouteReqVToS();
  virtual ~ServiceRouteReqVToS();

  ServiceRouteReqVToS(const ServiceRouteReqVToS& from);

  inline ServiceRouteReqVToS& operator=(const ServiceRouteReqVToS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceRouteReqVToS& default_instance();

  void Swap(ServiceRouteReqVToS* other);

  // implements Message ----------------------------------------------

  ServiceRouteReqVToS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServiceRouteReqVToS& from);
  void MergeFrom(const ServiceRouteReqVToS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 SrcRouterNo = 1;
  inline bool has_srcrouterno() const;
  inline void clear_srcrouterno();
  static const int kSrcRouterNoFieldNumber = 1;
  inline ::google::protobuf::uint32 srcrouterno() const;
  inline void set_srcrouterno(::google::protobuf::uint32 value);

  // optional uint32 SrcServerNo = 2;
  inline bool has_srcserverno() const;
  inline void clear_srcserverno();
  static const int kSrcServerNoFieldNumber = 2;
  inline ::google::protobuf::uint32 srcserverno() const;
  inline void set_srcserverno(::google::protobuf::uint32 value);

  // optional uint32 SrcSessionNo = 3;
  inline bool has_srcsessionno() const;
  inline void clear_srcsessionno();
  static const int kSrcSessionNoFieldNumber = 3;
  inline ::google::protobuf::uint32 srcsessionno() const;
  inline void set_srcsessionno(::google::protobuf::uint32 value);

  // optional uint32 ServiceNo = 4;
  inline bool has_serviceno() const;
  inline void clear_serviceno();
  static const int kServiceNoFieldNumber = 4;
  inline ::google::protobuf::uint32 serviceno() const;
  inline void set_serviceno(::google::protobuf::uint32 value);

  // optional uint32 SeqNo = 5;
  inline bool has_seqno() const;
  inline void clear_seqno();
  static const int kSeqNoFieldNumber = 5;
  inline ::google::protobuf::uint32 seqno() const;
  inline void set_seqno(::google::protobuf::uint32 value);

  // optional uint32 ServiceFlags = 6;
  inline bool has_serviceflags() const;
  inline void clear_serviceflags();
  static const int kServiceFlagsFieldNumber = 6;
  inline ::google::protobuf::uint32 serviceflags() const;
  inline void set_serviceflags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.ServiceRouteReqVToS)
 private:
  inline void set_has_srcrouterno();
  inline void clear_has_srcrouterno();
  inline void set_has_srcserverno();
  inline void clear_has_srcserverno();
  inline void set_has_srcsessionno();
  inline void clear_has_srcsessionno();
  inline void set_has_serviceno();
  inline void clear_has_serviceno();
  inline void set_has_seqno();
  inline void clear_has_seqno();
  inline void set_has_serviceflags();
  inline void clear_has_serviceflags();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 srcrouterno_;
  ::google::protobuf::uint32 srcserverno_;
  ::google::protobuf::uint32 srcsessionno_;
  ::google::protobuf::uint32 serviceno_;
  ::google::protobuf::uint32 seqno_;
  ::google::protobuf::uint32 serviceflags_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static ServiceRouteReqVToS* default_instance_;
};
// -------------------------------------------------------------------

class ServiceRouteStatusNty : public ::google::protobuf::Message {
 public:
  ServiceRouteStatusNty();
  virtual ~ServiceRouteStatusNty();

  ServiceRouteStatusNty(const ServiceRouteStatusNty& from);

  inline ServiceRouteStatusNty& operator=(const ServiceRouteStatusNty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceRouteStatusNty& default_instance();

  void Swap(ServiceRouteStatusNty* other);

  // implements Message ----------------------------------------------

  ServiceRouteStatusNty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServiceRouteStatusNty& from);
  void MergeFrom(const ServiceRouteStatusNty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RouterNo = 1;
  inline bool has_routerno() const;
  inline void clear_routerno();
  static const int kRouterNoFieldNumber = 1;
  inline ::google::protobuf::uint32 routerno() const;
  inline void set_routerno(::google::protobuf::uint32 value);

  // optional uint32 SeqNo = 2;
  inline bool has_seqno() const;
  inline void clear_seqno();
  static const int kSeqNoFieldNumber = 2;
  inline ::google::protobuf::uint32 seqno() const;
  inline void set_seqno(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.ServiceRouteStatusNty)
 private:
  inline void set_has_routerno();
  inline void clear_has_routerno();
  inline void set_has_seqno();
  inline void clear_has_seqno();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 routerno_;
  ::google::protobuf::uint32 seqno_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static ServiceRouteStatusNty* default_instance_;
};
// -------------------------------------------------------------------

class ServiceRouteReqVToV : public ::google::protobuf::Message {
 public:
  ServiceRouteReqVToV();
  virtual ~ServiceRouteReqVToV();

  ServiceRouteReqVToV(const ServiceRouteReqVToV& from);

  inline ServiceRouteReqVToV& operator=(const ServiceRouteReqVToV& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceRouteReqVToV& default_instance();

  void Swap(ServiceRouteReqVToV* other);

  // implements Message ----------------------------------------------

  ServiceRouteReqVToV* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServiceRouteReqVToV& from);
  void MergeFrom(const ServiceRouteReqVToV& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 SrcRouterNo = 1;
  inline bool has_srcrouterno() const;
  inline void clear_srcrouterno();
  static const int kSrcRouterNoFieldNumber = 1;
  inline ::google::protobuf::uint32 srcrouterno() const;
  inline void set_srcrouterno(::google::protobuf::uint32 value);

  // optional uint32 SrcSessionNo = 2;
  inline bool has_srcsessionno() const;
  inline void clear_srcsessionno();
  static const int kSrcSessionNoFieldNumber = 2;
  inline ::google::protobuf::uint32 srcsessionno() const;
  inline void set_srcsessionno(::google::protobuf::uint32 value);

  // optional uint32 SrcServerNo = 3;
  inline bool has_srcserverno() const;
  inline void clear_srcserverno();
  static const int kSrcServerNoFieldNumber = 3;
  inline ::google::protobuf::uint32 srcserverno() const;
  inline void set_srcserverno(::google::protobuf::uint32 value);

  // optional uint32 DestRouterNo = 4;
  inline bool has_destrouterno() const;
  inline void clear_destrouterno();
  static const int kDestRouterNoFieldNumber = 4;
  inline ::google::protobuf::uint32 destrouterno() const;
  inline void set_destrouterno(::google::protobuf::uint32 value);

  // optional uint32 DestSessionNo = 5;
  inline bool has_destsessionno() const;
  inline void clear_destsessionno();
  static const int kDestSessionNoFieldNumber = 5;
  inline ::google::protobuf::uint32 destsessionno() const;
  inline void set_destsessionno(::google::protobuf::uint32 value);

  // optional uint32 DestServerNo = 6;
  inline bool has_destserverno() const;
  inline void clear_destserverno();
  static const int kDestServerNoFieldNumber = 6;
  inline ::google::protobuf::uint32 destserverno() const;
  inline void set_destserverno(::google::protobuf::uint32 value);

  // optional uint32 ServiceNo = 7;
  inline bool has_serviceno() const;
  inline void clear_serviceno();
  static const int kServiceNoFieldNumber = 7;
  inline ::google::protobuf::uint32 serviceno() const;
  inline void set_serviceno(::google::protobuf::uint32 value);

  // optional uint32 SeqNo = 8;
  inline bool has_seqno() const;
  inline void clear_seqno();
  static const int kSeqNoFieldNumber = 8;
  inline ::google::protobuf::uint32 seqno() const;
  inline void set_seqno(::google::protobuf::uint32 value);

  // optional uint32 ServiceFlags = 9;
  inline bool has_serviceflags() const;
  inline void clear_serviceflags();
  static const int kServiceFlagsFieldNumber = 9;
  inline ::google::protobuf::uint32 serviceflags() const;
  inline void set_serviceflags(::google::protobuf::uint32 value);

  // optional string TTL = 10;
  inline bool has_ttl() const;
  inline void clear_ttl();
  static const int kTTLFieldNumber = 10;
  inline const ::std::string& ttl() const;
  inline void set_ttl(const ::std::string& value);
  inline void set_ttl(const char* value);
  inline void set_ttl(const char* value, size_t size);
  inline ::std::string* mutable_ttl();
  inline ::std::string* release_ttl();
  inline void set_allocated_ttl(::std::string* ttl);

  // optional uint32 ProtocolNo = 11;
  inline bool has_protocolno() const;
  inline void clear_protocolno();
  static const int kProtocolNoFieldNumber = 11;
  inline ::google::protobuf::uint32 protocolno() const;
  inline void set_protocolno(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.ServiceRouteReqVToV)
 private:
  inline void set_has_srcrouterno();
  inline void clear_has_srcrouterno();
  inline void set_has_srcsessionno();
  inline void clear_has_srcsessionno();
  inline void set_has_srcserverno();
  inline void clear_has_srcserverno();
  inline void set_has_destrouterno();
  inline void clear_has_destrouterno();
  inline void set_has_destsessionno();
  inline void clear_has_destsessionno();
  inline void set_has_destserverno();
  inline void clear_has_destserverno();
  inline void set_has_serviceno();
  inline void clear_has_serviceno();
  inline void set_has_seqno();
  inline void clear_has_seqno();
  inline void set_has_serviceflags();
  inline void clear_has_serviceflags();
  inline void set_has_ttl();
  inline void clear_has_ttl();
  inline void set_has_protocolno();
  inline void clear_has_protocolno();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 srcrouterno_;
  ::google::protobuf::uint32 srcsessionno_;
  ::google::protobuf::uint32 srcserverno_;
  ::google::protobuf::uint32 destrouterno_;
  ::google::protobuf::uint32 destsessionno_;
  ::google::protobuf::uint32 destserverno_;
  ::google::protobuf::uint32 serviceno_;
  ::google::protobuf::uint32 seqno_;
  ::std::string* ttl_;
  ::google::protobuf::uint32 serviceflags_;
  ::google::protobuf::uint32 protocolno_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static ServiceRouteReqVToV* default_instance_;
};
// -------------------------------------------------------------------

class ServiceRouteRspVToV : public ::google::protobuf::Message {
 public:
  ServiceRouteRspVToV();
  virtual ~ServiceRouteRspVToV();

  ServiceRouteRspVToV(const ServiceRouteRspVToV& from);

  inline ServiceRouteRspVToV& operator=(const ServiceRouteRspVToV& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceRouteRspVToV& default_instance();

  void Swap(ServiceRouteRspVToV* other);

  // implements Message ----------------------------------------------

  ServiceRouteRspVToV* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServiceRouteRspVToV& from);
  void MergeFrom(const ServiceRouteRspVToV& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .dzh_bus_interface.RspInfo rspInfo = 1;
  inline bool has_rspinfo() const;
  inline void clear_rspinfo();
  static const int kRspInfoFieldNumber = 1;
  inline const ::dzh_bus_interface::RspInfo& rspinfo() const;
  inline ::dzh_bus_interface::RspInfo* mutable_rspinfo();
  inline ::dzh_bus_interface::RspInfo* release_rspinfo();
  inline void set_allocated_rspinfo(::dzh_bus_interface::RspInfo* rspinfo);

  // optional uint32 SrcRouterNo = 2;
  inline bool has_srcrouterno() const;
  inline void clear_srcrouterno();
  static const int kSrcRouterNoFieldNumber = 2;
  inline ::google::protobuf::uint32 srcrouterno() const;
  inline void set_srcrouterno(::google::protobuf::uint32 value);

  // optional uint32 SrcSessionNo = 3;
  inline bool has_srcsessionno() const;
  inline void clear_srcsessionno();
  static const int kSrcSessionNoFieldNumber = 3;
  inline ::google::protobuf::uint32 srcsessionno() const;
  inline void set_srcsessionno(::google::protobuf::uint32 value);

  // optional uint32 SrcServerNo = 4;
  inline bool has_srcserverno() const;
  inline void clear_srcserverno();
  static const int kSrcServerNoFieldNumber = 4;
  inline ::google::protobuf::uint32 srcserverno() const;
  inline void set_srcserverno(::google::protobuf::uint32 value);

  // optional uint32 DestRouterNo = 5;
  inline bool has_destrouterno() const;
  inline void clear_destrouterno();
  static const int kDestRouterNoFieldNumber = 5;
  inline ::google::protobuf::uint32 destrouterno() const;
  inline void set_destrouterno(::google::protobuf::uint32 value);

  // optional uint32 DestSessionNo = 6;
  inline bool has_destsessionno() const;
  inline void clear_destsessionno();
  static const int kDestSessionNoFieldNumber = 6;
  inline ::google::protobuf::uint32 destsessionno() const;
  inline void set_destsessionno(::google::protobuf::uint32 value);

  // optional uint32 DestServerNo = 7;
  inline bool has_destserverno() const;
  inline void clear_destserverno();
  static const int kDestServerNoFieldNumber = 7;
  inline ::google::protobuf::uint32 destserverno() const;
  inline void set_destserverno(::google::protobuf::uint32 value);

  // optional uint32 ServiceNo = 8;
  inline bool has_serviceno() const;
  inline void clear_serviceno();
  static const int kServiceNoFieldNumber = 8;
  inline ::google::protobuf::uint32 serviceno() const;
  inline void set_serviceno(::google::protobuf::uint32 value);

  // optional uint32 SeqNo = 9;
  inline bool has_seqno() const;
  inline void clear_seqno();
  static const int kSeqNoFieldNumber = 9;
  inline ::google::protobuf::uint32 seqno() const;
  inline void set_seqno(::google::protobuf::uint32 value);

  // optional uint32 ServiceFlags = 10;
  inline bool has_serviceflags() const;
  inline void clear_serviceflags();
  static const int kServiceFlagsFieldNumber = 10;
  inline ::google::protobuf::uint32 serviceflags() const;
  inline void set_serviceflags(::google::protobuf::uint32 value);

  // optional string TTL = 11;
  inline bool has_ttl() const;
  inline void clear_ttl();
  static const int kTTLFieldNumber = 11;
  inline const ::std::string& ttl() const;
  inline void set_ttl(const ::std::string& value);
  inline void set_ttl(const char* value);
  inline void set_ttl(const char* value, size_t size);
  inline ::std::string* mutable_ttl();
  inline ::std::string* release_ttl();
  inline void set_allocated_ttl(::std::string* ttl);

  // optional uint32 ProtocolNo = 12;
  inline bool has_protocolno() const;
  inline void clear_protocolno();
  static const int kProtocolNoFieldNumber = 12;
  inline ::google::protobuf::uint32 protocolno() const;
  inline void set_protocolno(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.ServiceRouteRspVToV)
 private:
  inline void set_has_rspinfo();
  inline void clear_has_rspinfo();
  inline void set_has_srcrouterno();
  inline void clear_has_srcrouterno();
  inline void set_has_srcsessionno();
  inline void clear_has_srcsessionno();
  inline void set_has_srcserverno();
  inline void clear_has_srcserverno();
  inline void set_has_destrouterno();
  inline void clear_has_destrouterno();
  inline void set_has_destsessionno();
  inline void clear_has_destsessionno();
  inline void set_has_destserverno();
  inline void clear_has_destserverno();
  inline void set_has_serviceno();
  inline void clear_has_serviceno();
  inline void set_has_seqno();
  inline void clear_has_seqno();
  inline void set_has_serviceflags();
  inline void clear_has_serviceflags();
  inline void set_has_ttl();
  inline void clear_has_ttl();
  inline void set_has_protocolno();
  inline void clear_has_protocolno();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::dzh_bus_interface::RspInfo* rspinfo_;
  ::google::protobuf::uint32 srcrouterno_;
  ::google::protobuf::uint32 srcsessionno_;
  ::google::protobuf::uint32 srcserverno_;
  ::google::protobuf::uint32 destrouterno_;
  ::google::protobuf::uint32 destsessionno_;
  ::google::protobuf::uint32 destserverno_;
  ::google::protobuf::uint32 serviceno_;
  ::google::protobuf::uint32 seqno_;
  ::std::string* ttl_;
  ::google::protobuf::uint32 serviceflags_;
  ::google::protobuf::uint32 protocolno_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static ServiceRouteRspVToV* default_instance_;
};
// ===================================================================


// ===================================================================

// Bus_Head

// required uint32 BodyType = 1;
inline bool Bus_Head::has_bodytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Bus_Head::set_has_bodytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Bus_Head::clear_has_bodytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Bus_Head::clear_bodytype() {
  bodytype_ = 0u;
  clear_has_bodytype();
}
inline ::google::protobuf::uint32 Bus_Head::bodytype() const {
  return bodytype_;
}
inline void Bus_Head::set_bodytype(::google::protobuf::uint32 value) {
  set_has_bodytype();
  bodytype_ = value;
}

// required uint32 RequestID = 2;
inline bool Bus_Head::has_requestid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Bus_Head::set_has_requestid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Bus_Head::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Bus_Head::clear_requestid() {
  requestid_ = 0u;
  clear_has_requestid();
}
inline ::google::protobuf::uint32 Bus_Head::requestid() const {
  return requestid_;
}
inline void Bus_Head::set_requestid(::google::protobuf::uint32 value) {
  set_has_requestid();
  requestid_ = value;
}

// required uint32 EndFlag = 3;
inline bool Bus_Head::has_endflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Bus_Head::set_has_endflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Bus_Head::clear_has_endflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Bus_Head::clear_endflag() {
  endflag_ = 0u;
  clear_has_endflag();
}
inline ::google::protobuf::uint32 Bus_Head::endflag() const {
  return endflag_;
}
inline void Bus_Head::set_endflag(::google::protobuf::uint32 value) {
  set_has_endflag();
  endflag_ = value;
}

// optional .dzh_bus_interface.Body body = 4;
inline bool Bus_Head::has_body() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Bus_Head::set_has_body() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Bus_Head::clear_has_body() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Bus_Head::clear_body() {
  if (body_ != NULL) body_->::dzh_bus_interface::Body::Clear();
  clear_has_body();
}
inline const ::dzh_bus_interface::Body& Bus_Head::body() const {
  return body_ != NULL ? *body_ : *default_instance_->body_;
}
inline ::dzh_bus_interface::Body* Bus_Head::mutable_body() {
  set_has_body();
  if (body_ == NULL) body_ = new ::dzh_bus_interface::Body;
  return body_;
}
inline ::dzh_bus_interface::Body* Bus_Head::release_body() {
  clear_has_body();
  ::dzh_bus_interface::Body* temp = body_;
  body_ = NULL;
  return temp;
}
inline void Bus_Head::set_allocated_body(::dzh_bus_interface::Body* body) {
  delete body_;
  body_ = body;
  if (body) {
    set_has_body();
  } else {
    clear_has_body();
  }
}

// -------------------------------------------------------------------

// Body

// optional .dzh_bus_interface.LoginReq loginReq = 1;
inline bool Body::has_loginreq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Body::set_has_loginreq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Body::clear_has_loginreq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Body::clear_loginreq() {
  if (loginreq_ != NULL) loginreq_->::dzh_bus_interface::LoginReq::Clear();
  clear_has_loginreq();
}
inline const ::dzh_bus_interface::LoginReq& Body::loginreq() const {
  return loginreq_ != NULL ? *loginreq_ : *default_instance_->loginreq_;
}
inline ::dzh_bus_interface::LoginReq* Body::mutable_loginreq() {
  set_has_loginreq();
  if (loginreq_ == NULL) loginreq_ = new ::dzh_bus_interface::LoginReq;
  return loginreq_;
}
inline ::dzh_bus_interface::LoginReq* Body::release_loginreq() {
  clear_has_loginreq();
  ::dzh_bus_interface::LoginReq* temp = loginreq_;
  loginreq_ = NULL;
  return temp;
}
inline void Body::set_allocated_loginreq(::dzh_bus_interface::LoginReq* loginreq) {
  delete loginreq_;
  loginreq_ = loginreq;
  if (loginreq) {
    set_has_loginreq();
  } else {
    clear_has_loginreq();
  }
}

// optional .dzh_bus_interface.LoginRsp loginRsp = 2;
inline bool Body::has_loginrsp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Body::set_has_loginrsp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Body::clear_has_loginrsp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Body::clear_loginrsp() {
  if (loginrsp_ != NULL) loginrsp_->::dzh_bus_interface::LoginRsp::Clear();
  clear_has_loginrsp();
}
inline const ::dzh_bus_interface::LoginRsp& Body::loginrsp() const {
  return loginrsp_ != NULL ? *loginrsp_ : *default_instance_->loginrsp_;
}
inline ::dzh_bus_interface::LoginRsp* Body::mutable_loginrsp() {
  set_has_loginrsp();
  if (loginrsp_ == NULL) loginrsp_ = new ::dzh_bus_interface::LoginRsp;
  return loginrsp_;
}
inline ::dzh_bus_interface::LoginRsp* Body::release_loginrsp() {
  clear_has_loginrsp();
  ::dzh_bus_interface::LoginRsp* temp = loginrsp_;
  loginrsp_ = NULL;
  return temp;
}
inline void Body::set_allocated_loginrsp(::dzh_bus_interface::LoginRsp* loginrsp) {
  delete loginrsp_;
  loginrsp_ = loginrsp;
  if (loginrsp) {
    set_has_loginrsp();
  } else {
    clear_has_loginrsp();
  }
}

// optional .dzh_bus_interface.LogoutReq logoutReq = 3;
inline bool Body::has_logoutreq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Body::set_has_logoutreq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Body::clear_has_logoutreq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Body::clear_logoutreq() {
  if (logoutreq_ != NULL) logoutreq_->::dzh_bus_interface::LogoutReq::Clear();
  clear_has_logoutreq();
}
inline const ::dzh_bus_interface::LogoutReq& Body::logoutreq() const {
  return logoutreq_ != NULL ? *logoutreq_ : *default_instance_->logoutreq_;
}
inline ::dzh_bus_interface::LogoutReq* Body::mutable_logoutreq() {
  set_has_logoutreq();
  if (logoutreq_ == NULL) logoutreq_ = new ::dzh_bus_interface::LogoutReq;
  return logoutreq_;
}
inline ::dzh_bus_interface::LogoutReq* Body::release_logoutreq() {
  clear_has_logoutreq();
  ::dzh_bus_interface::LogoutReq* temp = logoutreq_;
  logoutreq_ = NULL;
  return temp;
}
inline void Body::set_allocated_logoutreq(::dzh_bus_interface::LogoutReq* logoutreq) {
  delete logoutreq_;
  logoutreq_ = logoutreq;
  if (logoutreq) {
    set_has_logoutreq();
  } else {
    clear_has_logoutreq();
  }
}

// optional .dzh_bus_interface.LogoutRsp logoutRsp = 4;
inline bool Body::has_logoutrsp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Body::set_has_logoutrsp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Body::clear_has_logoutrsp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Body::clear_logoutrsp() {
  if (logoutrsp_ != NULL) logoutrsp_->::dzh_bus_interface::LogoutRsp::Clear();
  clear_has_logoutrsp();
}
inline const ::dzh_bus_interface::LogoutRsp& Body::logoutrsp() const {
  return logoutrsp_ != NULL ? *logoutrsp_ : *default_instance_->logoutrsp_;
}
inline ::dzh_bus_interface::LogoutRsp* Body::mutable_logoutrsp() {
  set_has_logoutrsp();
  if (logoutrsp_ == NULL) logoutrsp_ = new ::dzh_bus_interface::LogoutRsp;
  return logoutrsp_;
}
inline ::dzh_bus_interface::LogoutRsp* Body::release_logoutrsp() {
  clear_has_logoutrsp();
  ::dzh_bus_interface::LogoutRsp* temp = logoutrsp_;
  logoutrsp_ = NULL;
  return temp;
}
inline void Body::set_allocated_logoutrsp(::dzh_bus_interface::LogoutRsp* logoutrsp) {
  delete logoutrsp_;
  logoutrsp_ = logoutrsp;
  if (logoutrsp) {
    set_has_logoutrsp();
  } else {
    clear_has_logoutrsp();
  }
}

// optional .dzh_bus_interface.ServiceRouteReqSToV serviceRouteReqSToV = 5;
inline bool Body::has_serviceroutereqstov() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Body::set_has_serviceroutereqstov() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Body::clear_has_serviceroutereqstov() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Body::clear_serviceroutereqstov() {
  if (serviceroutereqstov_ != NULL) serviceroutereqstov_->::dzh_bus_interface::ServiceRouteReqSToV::Clear();
  clear_has_serviceroutereqstov();
}
inline const ::dzh_bus_interface::ServiceRouteReqSToV& Body::serviceroutereqstov() const {
  return serviceroutereqstov_ != NULL ? *serviceroutereqstov_ : *default_instance_->serviceroutereqstov_;
}
inline ::dzh_bus_interface::ServiceRouteReqSToV* Body::mutable_serviceroutereqstov() {
  set_has_serviceroutereqstov();
  if (serviceroutereqstov_ == NULL) serviceroutereqstov_ = new ::dzh_bus_interface::ServiceRouteReqSToV;
  return serviceroutereqstov_;
}
inline ::dzh_bus_interface::ServiceRouteReqSToV* Body::release_serviceroutereqstov() {
  clear_has_serviceroutereqstov();
  ::dzh_bus_interface::ServiceRouteReqSToV* temp = serviceroutereqstov_;
  serviceroutereqstov_ = NULL;
  return temp;
}
inline void Body::set_allocated_serviceroutereqstov(::dzh_bus_interface::ServiceRouteReqSToV* serviceroutereqstov) {
  delete serviceroutereqstov_;
  serviceroutereqstov_ = serviceroutereqstov;
  if (serviceroutereqstov) {
    set_has_serviceroutereqstov();
  } else {
    clear_has_serviceroutereqstov();
  }
}

// optional .dzh_bus_interface.ServiceRouteRspSToV serviceRouteRspSToV = 6;
inline bool Body::has_servicerouterspstov() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Body::set_has_servicerouterspstov() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Body::clear_has_servicerouterspstov() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Body::clear_servicerouterspstov() {
  if (servicerouterspstov_ != NULL) servicerouterspstov_->::dzh_bus_interface::ServiceRouteRspSToV::Clear();
  clear_has_servicerouterspstov();
}
inline const ::dzh_bus_interface::ServiceRouteRspSToV& Body::servicerouterspstov() const {
  return servicerouterspstov_ != NULL ? *servicerouterspstov_ : *default_instance_->servicerouterspstov_;
}
inline ::dzh_bus_interface::ServiceRouteRspSToV* Body::mutable_servicerouterspstov() {
  set_has_servicerouterspstov();
  if (servicerouterspstov_ == NULL) servicerouterspstov_ = new ::dzh_bus_interface::ServiceRouteRspSToV;
  return servicerouterspstov_;
}
inline ::dzh_bus_interface::ServiceRouteRspSToV* Body::release_servicerouterspstov() {
  clear_has_servicerouterspstov();
  ::dzh_bus_interface::ServiceRouteRspSToV* temp = servicerouterspstov_;
  servicerouterspstov_ = NULL;
  return temp;
}
inline void Body::set_allocated_servicerouterspstov(::dzh_bus_interface::ServiceRouteRspSToV* servicerouterspstov) {
  delete servicerouterspstov_;
  servicerouterspstov_ = servicerouterspstov;
  if (servicerouterspstov) {
    set_has_servicerouterspstov();
  } else {
    clear_has_servicerouterspstov();
  }
}

// optional .dzh_bus_interface.ServiceRouteReqVToS serviceRouteReqVToS = 7;
inline bool Body::has_serviceroutereqvtos() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Body::set_has_serviceroutereqvtos() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Body::clear_has_serviceroutereqvtos() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Body::clear_serviceroutereqvtos() {
  if (serviceroutereqvtos_ != NULL) serviceroutereqvtos_->::dzh_bus_interface::ServiceRouteReqVToS::Clear();
  clear_has_serviceroutereqvtos();
}
inline const ::dzh_bus_interface::ServiceRouteReqVToS& Body::serviceroutereqvtos() const {
  return serviceroutereqvtos_ != NULL ? *serviceroutereqvtos_ : *default_instance_->serviceroutereqvtos_;
}
inline ::dzh_bus_interface::ServiceRouteReqVToS* Body::mutable_serviceroutereqvtos() {
  set_has_serviceroutereqvtos();
  if (serviceroutereqvtos_ == NULL) serviceroutereqvtos_ = new ::dzh_bus_interface::ServiceRouteReqVToS;
  return serviceroutereqvtos_;
}
inline ::dzh_bus_interface::ServiceRouteReqVToS* Body::release_serviceroutereqvtos() {
  clear_has_serviceroutereqvtos();
  ::dzh_bus_interface::ServiceRouteReqVToS* temp = serviceroutereqvtos_;
  serviceroutereqvtos_ = NULL;
  return temp;
}
inline void Body::set_allocated_serviceroutereqvtos(::dzh_bus_interface::ServiceRouteReqVToS* serviceroutereqvtos) {
  delete serviceroutereqvtos_;
  serviceroutereqvtos_ = serviceroutereqvtos;
  if (serviceroutereqvtos) {
    set_has_serviceroutereqvtos();
  } else {
    clear_has_serviceroutereqvtos();
  }
}

// optional .dzh_bus_interface.ServiceRouteStatusNty serviceRouteStatusNty = 8;
inline bool Body::has_serviceroutestatusnty() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Body::set_has_serviceroutestatusnty() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Body::clear_has_serviceroutestatusnty() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Body::clear_serviceroutestatusnty() {
  if (serviceroutestatusnty_ != NULL) serviceroutestatusnty_->::dzh_bus_interface::ServiceRouteStatusNty::Clear();
  clear_has_serviceroutestatusnty();
}
inline const ::dzh_bus_interface::ServiceRouteStatusNty& Body::serviceroutestatusnty() const {
  return serviceroutestatusnty_ != NULL ? *serviceroutestatusnty_ : *default_instance_->serviceroutestatusnty_;
}
inline ::dzh_bus_interface::ServiceRouteStatusNty* Body::mutable_serviceroutestatusnty() {
  set_has_serviceroutestatusnty();
  if (serviceroutestatusnty_ == NULL) serviceroutestatusnty_ = new ::dzh_bus_interface::ServiceRouteStatusNty;
  return serviceroutestatusnty_;
}
inline ::dzh_bus_interface::ServiceRouteStatusNty* Body::release_serviceroutestatusnty() {
  clear_has_serviceroutestatusnty();
  ::dzh_bus_interface::ServiceRouteStatusNty* temp = serviceroutestatusnty_;
  serviceroutestatusnty_ = NULL;
  return temp;
}
inline void Body::set_allocated_serviceroutestatusnty(::dzh_bus_interface::ServiceRouteStatusNty* serviceroutestatusnty) {
  delete serviceroutestatusnty_;
  serviceroutestatusnty_ = serviceroutestatusnty;
  if (serviceroutestatusnty) {
    set_has_serviceroutestatusnty();
  } else {
    clear_has_serviceroutestatusnty();
  }
}

// optional .dzh_bus_interface.ServiceRouteReqVToV serviceRouteReqVToV = 9;
inline bool Body::has_serviceroutereqvtov() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Body::set_has_serviceroutereqvtov() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Body::clear_has_serviceroutereqvtov() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Body::clear_serviceroutereqvtov() {
  if (serviceroutereqvtov_ != NULL) serviceroutereqvtov_->::dzh_bus_interface::ServiceRouteReqVToV::Clear();
  clear_has_serviceroutereqvtov();
}
inline const ::dzh_bus_interface::ServiceRouteReqVToV& Body::serviceroutereqvtov() const {
  return serviceroutereqvtov_ != NULL ? *serviceroutereqvtov_ : *default_instance_->serviceroutereqvtov_;
}
inline ::dzh_bus_interface::ServiceRouteReqVToV* Body::mutable_serviceroutereqvtov() {
  set_has_serviceroutereqvtov();
  if (serviceroutereqvtov_ == NULL) serviceroutereqvtov_ = new ::dzh_bus_interface::ServiceRouteReqVToV;
  return serviceroutereqvtov_;
}
inline ::dzh_bus_interface::ServiceRouteReqVToV* Body::release_serviceroutereqvtov() {
  clear_has_serviceroutereqvtov();
  ::dzh_bus_interface::ServiceRouteReqVToV* temp = serviceroutereqvtov_;
  serviceroutereqvtov_ = NULL;
  return temp;
}
inline void Body::set_allocated_serviceroutereqvtov(::dzh_bus_interface::ServiceRouteReqVToV* serviceroutereqvtov) {
  delete serviceroutereqvtov_;
  serviceroutereqvtov_ = serviceroutereqvtov;
  if (serviceroutereqvtov) {
    set_has_serviceroutereqvtov();
  } else {
    clear_has_serviceroutereqvtov();
  }
}

// optional .dzh_bus_interface.ServiceRouteRspVToV serviceRouteRspVToV = 10;
inline bool Body::has_servicerouterspvtov() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Body::set_has_servicerouterspvtov() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Body::clear_has_servicerouterspvtov() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Body::clear_servicerouterspvtov() {
  if (servicerouterspvtov_ != NULL) servicerouterspvtov_->::dzh_bus_interface::ServiceRouteRspVToV::Clear();
  clear_has_servicerouterspvtov();
}
inline const ::dzh_bus_interface::ServiceRouteRspVToV& Body::servicerouterspvtov() const {
  return servicerouterspvtov_ != NULL ? *servicerouterspvtov_ : *default_instance_->servicerouterspvtov_;
}
inline ::dzh_bus_interface::ServiceRouteRspVToV* Body::mutable_servicerouterspvtov() {
  set_has_servicerouterspvtov();
  if (servicerouterspvtov_ == NULL) servicerouterspvtov_ = new ::dzh_bus_interface::ServiceRouteRspVToV;
  return servicerouterspvtov_;
}
inline ::dzh_bus_interface::ServiceRouteRspVToV* Body::release_servicerouterspvtov() {
  clear_has_servicerouterspvtov();
  ::dzh_bus_interface::ServiceRouteRspVToV* temp = servicerouterspvtov_;
  servicerouterspvtov_ = NULL;
  return temp;
}
inline void Body::set_allocated_servicerouterspvtov(::dzh_bus_interface::ServiceRouteRspVToV* servicerouterspvtov) {
  delete servicerouterspvtov_;
  servicerouterspvtov_ = servicerouterspvtov;
  if (servicerouterspvtov) {
    set_has_servicerouterspvtov();
  } else {
    clear_has_servicerouterspvtov();
  }
}

// -------------------------------------------------------------------

// RspInfo

// required uint32 RspNo = 1;
inline bool RspInfo::has_rspno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspInfo::set_has_rspno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspInfo::clear_has_rspno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspInfo::clear_rspno() {
  rspno_ = 0u;
  clear_has_rspno();
}
inline ::google::protobuf::uint32 RspInfo::rspno() const {
  return rspno_;
}
inline void RspInfo::set_rspno(::google::protobuf::uint32 value) {
  set_has_rspno();
  rspno_ = value;
}

// required string RspDesc = 2;
inline bool RspInfo::has_rspdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspInfo::set_has_rspdesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspInfo::clear_has_rspdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspInfo::clear_rspdesc() {
  if (rspdesc_ != &::google::protobuf::internal::kEmptyString) {
    rspdesc_->clear();
  }
  clear_has_rspdesc();
}
inline const ::std::string& RspInfo::rspdesc() const {
  return *rspdesc_;
}
inline void RspInfo::set_rspdesc(const ::std::string& value) {
  set_has_rspdesc();
  if (rspdesc_ == &::google::protobuf::internal::kEmptyString) {
    rspdesc_ = new ::std::string;
  }
  rspdesc_->assign(value);
}
inline void RspInfo::set_rspdesc(const char* value) {
  set_has_rspdesc();
  if (rspdesc_ == &::google::protobuf::internal::kEmptyString) {
    rspdesc_ = new ::std::string;
  }
  rspdesc_->assign(value);
}
inline void RspInfo::set_rspdesc(const char* value, size_t size) {
  set_has_rspdesc();
  if (rspdesc_ == &::google::protobuf::internal::kEmptyString) {
    rspdesc_ = new ::std::string;
  }
  rspdesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RspInfo::mutable_rspdesc() {
  set_has_rspdesc();
  if (rspdesc_ == &::google::protobuf::internal::kEmptyString) {
    rspdesc_ = new ::std::string;
  }
  return rspdesc_;
}
inline ::std::string* RspInfo::release_rspdesc() {
  clear_has_rspdesc();
  if (rspdesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rspdesc_;
    rspdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RspInfo::set_allocated_rspdesc(::std::string* rspdesc) {
  if (rspdesc_ != &::google::protobuf::internal::kEmptyString) {
    delete rspdesc_;
  }
  if (rspdesc) {
    set_has_rspdesc();
    rspdesc_ = rspdesc;
  } else {
    clear_has_rspdesc();
    rspdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// LoginReq

// optional uint32 RouterNo = 1;
inline bool LoginReq::has_routerno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginReq::set_has_routerno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginReq::clear_has_routerno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginReq::clear_routerno() {
  routerno_ = 0u;
  clear_has_routerno();
}
inline ::google::protobuf::uint32 LoginReq::routerno() const {
  return routerno_;
}
inline void LoginReq::set_routerno(::google::protobuf::uint32 value) {
  set_has_routerno();
  routerno_ = value;
}

// optional uint32 ServerNo = 2;
inline bool LoginReq::has_serverno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginReq::set_has_serverno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginReq::clear_has_serverno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginReq::clear_serverno() {
  serverno_ = 0u;
  clear_has_serverno();
}
inline ::google::protobuf::uint32 LoginReq::serverno() const {
  return serverno_;
}
inline void LoginReq::set_serverno(::google::protobuf::uint32 value) {
  set_has_serverno();
  serverno_ = value;
}

// repeated uint32 ServiceNo = 3;
inline int LoginReq::serviceno_size() const {
  return serviceno_.size();
}
inline void LoginReq::clear_serviceno() {
  serviceno_.Clear();
}
inline ::google::protobuf::uint32 LoginReq::serviceno(int index) const {
  return serviceno_.Get(index);
}
inline void LoginReq::set_serviceno(int index, ::google::protobuf::uint32 value) {
  serviceno_.Set(index, value);
}
inline void LoginReq::add_serviceno(::google::protobuf::uint32 value) {
  serviceno_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LoginReq::serviceno() const {
  return serviceno_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LoginReq::mutable_serviceno() {
  return &serviceno_;
}

// -------------------------------------------------------------------

// LoginRsp

// required .dzh_bus_interface.RspInfo rspInfo = 1;
inline bool LoginRsp::has_rspinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRsp::set_has_rspinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRsp::clear_has_rspinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRsp::clear_rspinfo() {
  if (rspinfo_ != NULL) rspinfo_->::dzh_bus_interface::RspInfo::Clear();
  clear_has_rspinfo();
}
inline const ::dzh_bus_interface::RspInfo& LoginRsp::rspinfo() const {
  return rspinfo_ != NULL ? *rspinfo_ : *default_instance_->rspinfo_;
}
inline ::dzh_bus_interface::RspInfo* LoginRsp::mutable_rspinfo() {
  set_has_rspinfo();
  if (rspinfo_ == NULL) rspinfo_ = new ::dzh_bus_interface::RspInfo;
  return rspinfo_;
}
inline ::dzh_bus_interface::RspInfo* LoginRsp::release_rspinfo() {
  clear_has_rspinfo();
  ::dzh_bus_interface::RspInfo* temp = rspinfo_;
  rspinfo_ = NULL;
  return temp;
}
inline void LoginRsp::set_allocated_rspinfo(::dzh_bus_interface::RspInfo* rspinfo) {
  delete rspinfo_;
  rspinfo_ = rspinfo;
  if (rspinfo) {
    set_has_rspinfo();
  } else {
    clear_has_rspinfo();
  }
}

// optional uint32 SessionNo = 2;
inline bool LoginRsp::has_sessionno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRsp::set_has_sessionno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRsp::clear_has_sessionno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRsp::clear_sessionno() {
  sessionno_ = 0u;
  clear_has_sessionno();
}
inline ::google::protobuf::uint32 LoginRsp::sessionno() const {
  return sessionno_;
}
inline void LoginRsp::set_sessionno(::google::protobuf::uint32 value) {
  set_has_sessionno();
  sessionno_ = value;
}

// optional uint32 RouterNo = 3;
inline bool LoginRsp::has_routerno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRsp::set_has_routerno() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRsp::clear_has_routerno() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRsp::clear_routerno() {
  routerno_ = 0u;
  clear_has_routerno();
}
inline ::google::protobuf::uint32 LoginRsp::routerno() const {
  return routerno_;
}
inline void LoginRsp::set_routerno(::google::protobuf::uint32 value) {
  set_has_routerno();
  routerno_ = value;
}

// -------------------------------------------------------------------

// LogoutReq

// -------------------------------------------------------------------

// LogoutRsp

// -------------------------------------------------------------------

// ServiceRouteReqSToV

// optional uint32 DestRouterNo = 1;
inline bool ServiceRouteReqSToV::has_destrouterno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServiceRouteReqSToV::set_has_destrouterno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServiceRouteReqSToV::clear_has_destrouterno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServiceRouteReqSToV::clear_destrouterno() {
  destrouterno_ = 0u;
  clear_has_destrouterno();
}
inline ::google::protobuf::uint32 ServiceRouteReqSToV::destrouterno() const {
  return destrouterno_;
}
inline void ServiceRouteReqSToV::set_destrouterno(::google::protobuf::uint32 value) {
  set_has_destrouterno();
  destrouterno_ = value;
}

// optional uint32 DestServerNo = 2;
inline bool ServiceRouteReqSToV::has_destserverno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServiceRouteReqSToV::set_has_destserverno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServiceRouteReqSToV::clear_has_destserverno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServiceRouteReqSToV::clear_destserverno() {
  destserverno_ = 0u;
  clear_has_destserverno();
}
inline ::google::protobuf::uint32 ServiceRouteReqSToV::destserverno() const {
  return destserverno_;
}
inline void ServiceRouteReqSToV::set_destserverno(::google::protobuf::uint32 value) {
  set_has_destserverno();
  destserverno_ = value;
}

// optional uint32 DestSessionNo = 3;
inline bool ServiceRouteReqSToV::has_destsessionno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServiceRouteReqSToV::set_has_destsessionno() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServiceRouteReqSToV::clear_has_destsessionno() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServiceRouteReqSToV::clear_destsessionno() {
  destsessionno_ = 0u;
  clear_has_destsessionno();
}
inline ::google::protobuf::uint32 ServiceRouteReqSToV::destsessionno() const {
  return destsessionno_;
}
inline void ServiceRouteReqSToV::set_destsessionno(::google::protobuf::uint32 value) {
  set_has_destsessionno();
  destsessionno_ = value;
}

// optional uint32 ServiceNo = 4;
inline bool ServiceRouteReqSToV::has_serviceno() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServiceRouteReqSToV::set_has_serviceno() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServiceRouteReqSToV::clear_has_serviceno() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServiceRouteReqSToV::clear_serviceno() {
  serviceno_ = 0u;
  clear_has_serviceno();
}
inline ::google::protobuf::uint32 ServiceRouteReqSToV::serviceno() const {
  return serviceno_;
}
inline void ServiceRouteReqSToV::set_serviceno(::google::protobuf::uint32 value) {
  set_has_serviceno();
  serviceno_ = value;
}

// optional uint32 SeqNo = 5;
inline bool ServiceRouteReqSToV::has_seqno() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServiceRouteReqSToV::set_has_seqno() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServiceRouteReqSToV::clear_has_seqno() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServiceRouteReqSToV::clear_seqno() {
  seqno_ = 0u;
  clear_has_seqno();
}
inline ::google::protobuf::uint32 ServiceRouteReqSToV::seqno() const {
  return seqno_;
}
inline void ServiceRouteReqSToV::set_seqno(::google::protobuf::uint32 value) {
  set_has_seqno();
  seqno_ = value;
}

// optional uint32 ServiceFlags = 6;
inline bool ServiceRouteReqSToV::has_serviceflags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServiceRouteReqSToV::set_has_serviceflags() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServiceRouteReqSToV::clear_has_serviceflags() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServiceRouteReqSToV::clear_serviceflags() {
  serviceflags_ = 0u;
  clear_has_serviceflags();
}
inline ::google::protobuf::uint32 ServiceRouteReqSToV::serviceflags() const {
  return serviceflags_;
}
inline void ServiceRouteReqSToV::set_serviceflags(::google::protobuf::uint32 value) {
  set_has_serviceflags();
  serviceflags_ = value;
}

// -------------------------------------------------------------------

// ServiceRouteRspSToV

// required .dzh_bus_interface.RspInfo rspInfo = 1;
inline bool ServiceRouteRspSToV::has_rspinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServiceRouteRspSToV::set_has_rspinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServiceRouteRspSToV::clear_has_rspinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServiceRouteRspSToV::clear_rspinfo() {
  if (rspinfo_ != NULL) rspinfo_->::dzh_bus_interface::RspInfo::Clear();
  clear_has_rspinfo();
}
inline const ::dzh_bus_interface::RspInfo& ServiceRouteRspSToV::rspinfo() const {
  return rspinfo_ != NULL ? *rspinfo_ : *default_instance_->rspinfo_;
}
inline ::dzh_bus_interface::RspInfo* ServiceRouteRspSToV::mutable_rspinfo() {
  set_has_rspinfo();
  if (rspinfo_ == NULL) rspinfo_ = new ::dzh_bus_interface::RspInfo;
  return rspinfo_;
}
inline ::dzh_bus_interface::RspInfo* ServiceRouteRspSToV::release_rspinfo() {
  clear_has_rspinfo();
  ::dzh_bus_interface::RspInfo* temp = rspinfo_;
  rspinfo_ = NULL;
  return temp;
}
inline void ServiceRouteRspSToV::set_allocated_rspinfo(::dzh_bus_interface::RspInfo* rspinfo) {
  delete rspinfo_;
  rspinfo_ = rspinfo;
  if (rspinfo) {
    set_has_rspinfo();
  } else {
    clear_has_rspinfo();
  }
}

// optional uint32 DestRouterNo = 2;
inline bool ServiceRouteRspSToV::has_destrouterno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServiceRouteRspSToV::set_has_destrouterno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServiceRouteRspSToV::clear_has_destrouterno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServiceRouteRspSToV::clear_destrouterno() {
  destrouterno_ = 0u;
  clear_has_destrouterno();
}
inline ::google::protobuf::uint32 ServiceRouteRspSToV::destrouterno() const {
  return destrouterno_;
}
inline void ServiceRouteRspSToV::set_destrouterno(::google::protobuf::uint32 value) {
  set_has_destrouterno();
  destrouterno_ = value;
}

// optional uint32 DestServerNo = 3;
inline bool ServiceRouteRspSToV::has_destserverno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServiceRouteRspSToV::set_has_destserverno() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServiceRouteRspSToV::clear_has_destserverno() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServiceRouteRspSToV::clear_destserverno() {
  destserverno_ = 0u;
  clear_has_destserverno();
}
inline ::google::protobuf::uint32 ServiceRouteRspSToV::destserverno() const {
  return destserverno_;
}
inline void ServiceRouteRspSToV::set_destserverno(::google::protobuf::uint32 value) {
  set_has_destserverno();
  destserverno_ = value;
}

// optional uint32 DestSessionNo = 4;
inline bool ServiceRouteRspSToV::has_destsessionno() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServiceRouteRspSToV::set_has_destsessionno() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServiceRouteRspSToV::clear_has_destsessionno() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServiceRouteRspSToV::clear_destsessionno() {
  destsessionno_ = 0u;
  clear_has_destsessionno();
}
inline ::google::protobuf::uint32 ServiceRouteRspSToV::destsessionno() const {
  return destsessionno_;
}
inline void ServiceRouteRspSToV::set_destsessionno(::google::protobuf::uint32 value) {
  set_has_destsessionno();
  destsessionno_ = value;
}

// optional uint32 ServiceNo = 5;
inline bool ServiceRouteRspSToV::has_serviceno() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServiceRouteRspSToV::set_has_serviceno() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServiceRouteRspSToV::clear_has_serviceno() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServiceRouteRspSToV::clear_serviceno() {
  serviceno_ = 0u;
  clear_has_serviceno();
}
inline ::google::protobuf::uint32 ServiceRouteRspSToV::serviceno() const {
  return serviceno_;
}
inline void ServiceRouteRspSToV::set_serviceno(::google::protobuf::uint32 value) {
  set_has_serviceno();
  serviceno_ = value;
}

// optional uint32 SeqNo = 6;
inline bool ServiceRouteRspSToV::has_seqno() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServiceRouteRspSToV::set_has_seqno() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServiceRouteRspSToV::clear_has_seqno() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServiceRouteRspSToV::clear_seqno() {
  seqno_ = 0u;
  clear_has_seqno();
}
inline ::google::protobuf::uint32 ServiceRouteRspSToV::seqno() const {
  return seqno_;
}
inline void ServiceRouteRspSToV::set_seqno(::google::protobuf::uint32 value) {
  set_has_seqno();
  seqno_ = value;
}

// optional uint32 ServiceFlags = 7;
inline bool ServiceRouteRspSToV::has_serviceflags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ServiceRouteRspSToV::set_has_serviceflags() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ServiceRouteRspSToV::clear_has_serviceflags() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ServiceRouteRspSToV::clear_serviceflags() {
  serviceflags_ = 0u;
  clear_has_serviceflags();
}
inline ::google::protobuf::uint32 ServiceRouteRspSToV::serviceflags() const {
  return serviceflags_;
}
inline void ServiceRouteRspSToV::set_serviceflags(::google::protobuf::uint32 value) {
  set_has_serviceflags();
  serviceflags_ = value;
}

// -------------------------------------------------------------------

// ServiceRouteReqVToS

// optional uint32 SrcRouterNo = 1;
inline bool ServiceRouteReqVToS::has_srcrouterno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServiceRouteReqVToS::set_has_srcrouterno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServiceRouteReqVToS::clear_has_srcrouterno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServiceRouteReqVToS::clear_srcrouterno() {
  srcrouterno_ = 0u;
  clear_has_srcrouterno();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToS::srcrouterno() const {
  return srcrouterno_;
}
inline void ServiceRouteReqVToS::set_srcrouterno(::google::protobuf::uint32 value) {
  set_has_srcrouterno();
  srcrouterno_ = value;
}

// optional uint32 SrcServerNo = 2;
inline bool ServiceRouteReqVToS::has_srcserverno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServiceRouteReqVToS::set_has_srcserverno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServiceRouteReqVToS::clear_has_srcserverno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServiceRouteReqVToS::clear_srcserverno() {
  srcserverno_ = 0u;
  clear_has_srcserverno();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToS::srcserverno() const {
  return srcserverno_;
}
inline void ServiceRouteReqVToS::set_srcserverno(::google::protobuf::uint32 value) {
  set_has_srcserverno();
  srcserverno_ = value;
}

// optional uint32 SrcSessionNo = 3;
inline bool ServiceRouteReqVToS::has_srcsessionno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServiceRouteReqVToS::set_has_srcsessionno() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServiceRouteReqVToS::clear_has_srcsessionno() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServiceRouteReqVToS::clear_srcsessionno() {
  srcsessionno_ = 0u;
  clear_has_srcsessionno();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToS::srcsessionno() const {
  return srcsessionno_;
}
inline void ServiceRouteReqVToS::set_srcsessionno(::google::protobuf::uint32 value) {
  set_has_srcsessionno();
  srcsessionno_ = value;
}

// optional uint32 ServiceNo = 4;
inline bool ServiceRouteReqVToS::has_serviceno() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServiceRouteReqVToS::set_has_serviceno() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServiceRouteReqVToS::clear_has_serviceno() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServiceRouteReqVToS::clear_serviceno() {
  serviceno_ = 0u;
  clear_has_serviceno();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToS::serviceno() const {
  return serviceno_;
}
inline void ServiceRouteReqVToS::set_serviceno(::google::protobuf::uint32 value) {
  set_has_serviceno();
  serviceno_ = value;
}

// optional uint32 SeqNo = 5;
inline bool ServiceRouteReqVToS::has_seqno() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServiceRouteReqVToS::set_has_seqno() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServiceRouteReqVToS::clear_has_seqno() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServiceRouteReqVToS::clear_seqno() {
  seqno_ = 0u;
  clear_has_seqno();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToS::seqno() const {
  return seqno_;
}
inline void ServiceRouteReqVToS::set_seqno(::google::protobuf::uint32 value) {
  set_has_seqno();
  seqno_ = value;
}

// optional uint32 ServiceFlags = 6;
inline bool ServiceRouteReqVToS::has_serviceflags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServiceRouteReqVToS::set_has_serviceflags() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServiceRouteReqVToS::clear_has_serviceflags() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServiceRouteReqVToS::clear_serviceflags() {
  serviceflags_ = 0u;
  clear_has_serviceflags();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToS::serviceflags() const {
  return serviceflags_;
}
inline void ServiceRouteReqVToS::set_serviceflags(::google::protobuf::uint32 value) {
  set_has_serviceflags();
  serviceflags_ = value;
}

// -------------------------------------------------------------------

// ServiceRouteStatusNty

// optional uint32 RouterNo = 1;
inline bool ServiceRouteStatusNty::has_routerno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServiceRouteStatusNty::set_has_routerno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServiceRouteStatusNty::clear_has_routerno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServiceRouteStatusNty::clear_routerno() {
  routerno_ = 0u;
  clear_has_routerno();
}
inline ::google::protobuf::uint32 ServiceRouteStatusNty::routerno() const {
  return routerno_;
}
inline void ServiceRouteStatusNty::set_routerno(::google::protobuf::uint32 value) {
  set_has_routerno();
  routerno_ = value;
}

// optional uint32 SeqNo = 2;
inline bool ServiceRouteStatusNty::has_seqno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServiceRouteStatusNty::set_has_seqno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServiceRouteStatusNty::clear_has_seqno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServiceRouteStatusNty::clear_seqno() {
  seqno_ = 0u;
  clear_has_seqno();
}
inline ::google::protobuf::uint32 ServiceRouteStatusNty::seqno() const {
  return seqno_;
}
inline void ServiceRouteStatusNty::set_seqno(::google::protobuf::uint32 value) {
  set_has_seqno();
  seqno_ = value;
}

// -------------------------------------------------------------------

// ServiceRouteReqVToV

// optional uint32 SrcRouterNo = 1;
inline bool ServiceRouteReqVToV::has_srcrouterno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServiceRouteReqVToV::set_has_srcrouterno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServiceRouteReqVToV::clear_has_srcrouterno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServiceRouteReqVToV::clear_srcrouterno() {
  srcrouterno_ = 0u;
  clear_has_srcrouterno();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToV::srcrouterno() const {
  return srcrouterno_;
}
inline void ServiceRouteReqVToV::set_srcrouterno(::google::protobuf::uint32 value) {
  set_has_srcrouterno();
  srcrouterno_ = value;
}

// optional uint32 SrcSessionNo = 2;
inline bool ServiceRouteReqVToV::has_srcsessionno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServiceRouteReqVToV::set_has_srcsessionno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServiceRouteReqVToV::clear_has_srcsessionno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServiceRouteReqVToV::clear_srcsessionno() {
  srcsessionno_ = 0u;
  clear_has_srcsessionno();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToV::srcsessionno() const {
  return srcsessionno_;
}
inline void ServiceRouteReqVToV::set_srcsessionno(::google::protobuf::uint32 value) {
  set_has_srcsessionno();
  srcsessionno_ = value;
}

// optional uint32 SrcServerNo = 3;
inline bool ServiceRouteReqVToV::has_srcserverno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServiceRouteReqVToV::set_has_srcserverno() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServiceRouteReqVToV::clear_has_srcserverno() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServiceRouteReqVToV::clear_srcserverno() {
  srcserverno_ = 0u;
  clear_has_srcserverno();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToV::srcserverno() const {
  return srcserverno_;
}
inline void ServiceRouteReqVToV::set_srcserverno(::google::protobuf::uint32 value) {
  set_has_srcserverno();
  srcserverno_ = value;
}

// optional uint32 DestRouterNo = 4;
inline bool ServiceRouteReqVToV::has_destrouterno() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServiceRouteReqVToV::set_has_destrouterno() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServiceRouteReqVToV::clear_has_destrouterno() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServiceRouteReqVToV::clear_destrouterno() {
  destrouterno_ = 0u;
  clear_has_destrouterno();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToV::destrouterno() const {
  return destrouterno_;
}
inline void ServiceRouteReqVToV::set_destrouterno(::google::protobuf::uint32 value) {
  set_has_destrouterno();
  destrouterno_ = value;
}

// optional uint32 DestSessionNo = 5;
inline bool ServiceRouteReqVToV::has_destsessionno() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServiceRouteReqVToV::set_has_destsessionno() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServiceRouteReqVToV::clear_has_destsessionno() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServiceRouteReqVToV::clear_destsessionno() {
  destsessionno_ = 0u;
  clear_has_destsessionno();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToV::destsessionno() const {
  return destsessionno_;
}
inline void ServiceRouteReqVToV::set_destsessionno(::google::protobuf::uint32 value) {
  set_has_destsessionno();
  destsessionno_ = value;
}

// optional uint32 DestServerNo = 6;
inline bool ServiceRouteReqVToV::has_destserverno() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServiceRouteReqVToV::set_has_destserverno() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServiceRouteReqVToV::clear_has_destserverno() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServiceRouteReqVToV::clear_destserverno() {
  destserverno_ = 0u;
  clear_has_destserverno();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToV::destserverno() const {
  return destserverno_;
}
inline void ServiceRouteReqVToV::set_destserverno(::google::protobuf::uint32 value) {
  set_has_destserverno();
  destserverno_ = value;
}

// optional uint32 ServiceNo = 7;
inline bool ServiceRouteReqVToV::has_serviceno() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ServiceRouteReqVToV::set_has_serviceno() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ServiceRouteReqVToV::clear_has_serviceno() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ServiceRouteReqVToV::clear_serviceno() {
  serviceno_ = 0u;
  clear_has_serviceno();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToV::serviceno() const {
  return serviceno_;
}
inline void ServiceRouteReqVToV::set_serviceno(::google::protobuf::uint32 value) {
  set_has_serviceno();
  serviceno_ = value;
}

// optional uint32 SeqNo = 8;
inline bool ServiceRouteReqVToV::has_seqno() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ServiceRouteReqVToV::set_has_seqno() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ServiceRouteReqVToV::clear_has_seqno() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ServiceRouteReqVToV::clear_seqno() {
  seqno_ = 0u;
  clear_has_seqno();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToV::seqno() const {
  return seqno_;
}
inline void ServiceRouteReqVToV::set_seqno(::google::protobuf::uint32 value) {
  set_has_seqno();
  seqno_ = value;
}

// optional uint32 ServiceFlags = 9;
inline bool ServiceRouteReqVToV::has_serviceflags() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ServiceRouteReqVToV::set_has_serviceflags() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ServiceRouteReqVToV::clear_has_serviceflags() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ServiceRouteReqVToV::clear_serviceflags() {
  serviceflags_ = 0u;
  clear_has_serviceflags();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToV::serviceflags() const {
  return serviceflags_;
}
inline void ServiceRouteReqVToV::set_serviceflags(::google::protobuf::uint32 value) {
  set_has_serviceflags();
  serviceflags_ = value;
}

// optional string TTL = 10;
inline bool ServiceRouteReqVToV::has_ttl() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ServiceRouteReqVToV::set_has_ttl() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ServiceRouteReqVToV::clear_has_ttl() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ServiceRouteReqVToV::clear_ttl() {
  if (ttl_ != &::google::protobuf::internal::kEmptyString) {
    ttl_->clear();
  }
  clear_has_ttl();
}
inline const ::std::string& ServiceRouteReqVToV::ttl() const {
  return *ttl_;
}
inline void ServiceRouteReqVToV::set_ttl(const ::std::string& value) {
  set_has_ttl();
  if (ttl_ == &::google::protobuf::internal::kEmptyString) {
    ttl_ = new ::std::string;
  }
  ttl_->assign(value);
}
inline void ServiceRouteReqVToV::set_ttl(const char* value) {
  set_has_ttl();
  if (ttl_ == &::google::protobuf::internal::kEmptyString) {
    ttl_ = new ::std::string;
  }
  ttl_->assign(value);
}
inline void ServiceRouteReqVToV::set_ttl(const char* value, size_t size) {
  set_has_ttl();
  if (ttl_ == &::google::protobuf::internal::kEmptyString) {
    ttl_ = new ::std::string;
  }
  ttl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ServiceRouteReqVToV::mutable_ttl() {
  set_has_ttl();
  if (ttl_ == &::google::protobuf::internal::kEmptyString) {
    ttl_ = new ::std::string;
  }
  return ttl_;
}
inline ::std::string* ServiceRouteReqVToV::release_ttl() {
  clear_has_ttl();
  if (ttl_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ttl_;
    ttl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ServiceRouteReqVToV::set_allocated_ttl(::std::string* ttl) {
  if (ttl_ != &::google::protobuf::internal::kEmptyString) {
    delete ttl_;
  }
  if (ttl) {
    set_has_ttl();
    ttl_ = ttl;
  } else {
    clear_has_ttl();
    ttl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 ProtocolNo = 11;
inline bool ServiceRouteReqVToV::has_protocolno() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ServiceRouteReqVToV::set_has_protocolno() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ServiceRouteReqVToV::clear_has_protocolno() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ServiceRouteReqVToV::clear_protocolno() {
  protocolno_ = 0u;
  clear_has_protocolno();
}
inline ::google::protobuf::uint32 ServiceRouteReqVToV::protocolno() const {
  return protocolno_;
}
inline void ServiceRouteReqVToV::set_protocolno(::google::protobuf::uint32 value) {
  set_has_protocolno();
  protocolno_ = value;
}

// -------------------------------------------------------------------

// ServiceRouteRspVToV

// required .dzh_bus_interface.RspInfo rspInfo = 1;
inline bool ServiceRouteRspVToV::has_rspinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServiceRouteRspVToV::set_has_rspinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServiceRouteRspVToV::clear_has_rspinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServiceRouteRspVToV::clear_rspinfo() {
  if (rspinfo_ != NULL) rspinfo_->::dzh_bus_interface::RspInfo::Clear();
  clear_has_rspinfo();
}
inline const ::dzh_bus_interface::RspInfo& ServiceRouteRspVToV::rspinfo() const {
  return rspinfo_ != NULL ? *rspinfo_ : *default_instance_->rspinfo_;
}
inline ::dzh_bus_interface::RspInfo* ServiceRouteRspVToV::mutable_rspinfo() {
  set_has_rspinfo();
  if (rspinfo_ == NULL) rspinfo_ = new ::dzh_bus_interface::RspInfo;
  return rspinfo_;
}
inline ::dzh_bus_interface::RspInfo* ServiceRouteRspVToV::release_rspinfo() {
  clear_has_rspinfo();
  ::dzh_bus_interface::RspInfo* temp = rspinfo_;
  rspinfo_ = NULL;
  return temp;
}
inline void ServiceRouteRspVToV::set_allocated_rspinfo(::dzh_bus_interface::RspInfo* rspinfo) {
  delete rspinfo_;
  rspinfo_ = rspinfo;
  if (rspinfo) {
    set_has_rspinfo();
  } else {
    clear_has_rspinfo();
  }
}

// optional uint32 SrcRouterNo = 2;
inline bool ServiceRouteRspVToV::has_srcrouterno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServiceRouteRspVToV::set_has_srcrouterno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServiceRouteRspVToV::clear_has_srcrouterno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServiceRouteRspVToV::clear_srcrouterno() {
  srcrouterno_ = 0u;
  clear_has_srcrouterno();
}
inline ::google::protobuf::uint32 ServiceRouteRspVToV::srcrouterno() const {
  return srcrouterno_;
}
inline void ServiceRouteRspVToV::set_srcrouterno(::google::protobuf::uint32 value) {
  set_has_srcrouterno();
  srcrouterno_ = value;
}

// optional uint32 SrcSessionNo = 3;
inline bool ServiceRouteRspVToV::has_srcsessionno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServiceRouteRspVToV::set_has_srcsessionno() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServiceRouteRspVToV::clear_has_srcsessionno() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServiceRouteRspVToV::clear_srcsessionno() {
  srcsessionno_ = 0u;
  clear_has_srcsessionno();
}
inline ::google::protobuf::uint32 ServiceRouteRspVToV::srcsessionno() const {
  return srcsessionno_;
}
inline void ServiceRouteRspVToV::set_srcsessionno(::google::protobuf::uint32 value) {
  set_has_srcsessionno();
  srcsessionno_ = value;
}

// optional uint32 SrcServerNo = 4;
inline bool ServiceRouteRspVToV::has_srcserverno() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServiceRouteRspVToV::set_has_srcserverno() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServiceRouteRspVToV::clear_has_srcserverno() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServiceRouteRspVToV::clear_srcserverno() {
  srcserverno_ = 0u;
  clear_has_srcserverno();
}
inline ::google::protobuf::uint32 ServiceRouteRspVToV::srcserverno() const {
  return srcserverno_;
}
inline void ServiceRouteRspVToV::set_srcserverno(::google::protobuf::uint32 value) {
  set_has_srcserverno();
  srcserverno_ = value;
}

// optional uint32 DestRouterNo = 5;
inline bool ServiceRouteRspVToV::has_destrouterno() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServiceRouteRspVToV::set_has_destrouterno() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServiceRouteRspVToV::clear_has_destrouterno() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServiceRouteRspVToV::clear_destrouterno() {
  destrouterno_ = 0u;
  clear_has_destrouterno();
}
inline ::google::protobuf::uint32 ServiceRouteRspVToV::destrouterno() const {
  return destrouterno_;
}
inline void ServiceRouteRspVToV::set_destrouterno(::google::protobuf::uint32 value) {
  set_has_destrouterno();
  destrouterno_ = value;
}

// optional uint32 DestSessionNo = 6;
inline bool ServiceRouteRspVToV::has_destsessionno() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServiceRouteRspVToV::set_has_destsessionno() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServiceRouteRspVToV::clear_has_destsessionno() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServiceRouteRspVToV::clear_destsessionno() {
  destsessionno_ = 0u;
  clear_has_destsessionno();
}
inline ::google::protobuf::uint32 ServiceRouteRspVToV::destsessionno() const {
  return destsessionno_;
}
inline void ServiceRouteRspVToV::set_destsessionno(::google::protobuf::uint32 value) {
  set_has_destsessionno();
  destsessionno_ = value;
}

// optional uint32 DestServerNo = 7;
inline bool ServiceRouteRspVToV::has_destserverno() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ServiceRouteRspVToV::set_has_destserverno() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ServiceRouteRspVToV::clear_has_destserverno() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ServiceRouteRspVToV::clear_destserverno() {
  destserverno_ = 0u;
  clear_has_destserverno();
}
inline ::google::protobuf::uint32 ServiceRouteRspVToV::destserverno() const {
  return destserverno_;
}
inline void ServiceRouteRspVToV::set_destserverno(::google::protobuf::uint32 value) {
  set_has_destserverno();
  destserverno_ = value;
}

// optional uint32 ServiceNo = 8;
inline bool ServiceRouteRspVToV::has_serviceno() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ServiceRouteRspVToV::set_has_serviceno() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ServiceRouteRspVToV::clear_has_serviceno() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ServiceRouteRspVToV::clear_serviceno() {
  serviceno_ = 0u;
  clear_has_serviceno();
}
inline ::google::protobuf::uint32 ServiceRouteRspVToV::serviceno() const {
  return serviceno_;
}
inline void ServiceRouteRspVToV::set_serviceno(::google::protobuf::uint32 value) {
  set_has_serviceno();
  serviceno_ = value;
}

// optional uint32 SeqNo = 9;
inline bool ServiceRouteRspVToV::has_seqno() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ServiceRouteRspVToV::set_has_seqno() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ServiceRouteRspVToV::clear_has_seqno() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ServiceRouteRspVToV::clear_seqno() {
  seqno_ = 0u;
  clear_has_seqno();
}
inline ::google::protobuf::uint32 ServiceRouteRspVToV::seqno() const {
  return seqno_;
}
inline void ServiceRouteRspVToV::set_seqno(::google::protobuf::uint32 value) {
  set_has_seqno();
  seqno_ = value;
}

// optional uint32 ServiceFlags = 10;
inline bool ServiceRouteRspVToV::has_serviceflags() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ServiceRouteRspVToV::set_has_serviceflags() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ServiceRouteRspVToV::clear_has_serviceflags() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ServiceRouteRspVToV::clear_serviceflags() {
  serviceflags_ = 0u;
  clear_has_serviceflags();
}
inline ::google::protobuf::uint32 ServiceRouteRspVToV::serviceflags() const {
  return serviceflags_;
}
inline void ServiceRouteRspVToV::set_serviceflags(::google::protobuf::uint32 value) {
  set_has_serviceflags();
  serviceflags_ = value;
}

// optional string TTL = 11;
inline bool ServiceRouteRspVToV::has_ttl() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ServiceRouteRspVToV::set_has_ttl() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ServiceRouteRspVToV::clear_has_ttl() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ServiceRouteRspVToV::clear_ttl() {
  if (ttl_ != &::google::protobuf::internal::kEmptyString) {
    ttl_->clear();
  }
  clear_has_ttl();
}
inline const ::std::string& ServiceRouteRspVToV::ttl() const {
  return *ttl_;
}
inline void ServiceRouteRspVToV::set_ttl(const ::std::string& value) {
  set_has_ttl();
  if (ttl_ == &::google::protobuf::internal::kEmptyString) {
    ttl_ = new ::std::string;
  }
  ttl_->assign(value);
}
inline void ServiceRouteRspVToV::set_ttl(const char* value) {
  set_has_ttl();
  if (ttl_ == &::google::protobuf::internal::kEmptyString) {
    ttl_ = new ::std::string;
  }
  ttl_->assign(value);
}
inline void ServiceRouteRspVToV::set_ttl(const char* value, size_t size) {
  set_has_ttl();
  if (ttl_ == &::google::protobuf::internal::kEmptyString) {
    ttl_ = new ::std::string;
  }
  ttl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ServiceRouteRspVToV::mutable_ttl() {
  set_has_ttl();
  if (ttl_ == &::google::protobuf::internal::kEmptyString) {
    ttl_ = new ::std::string;
  }
  return ttl_;
}
inline ::std::string* ServiceRouteRspVToV::release_ttl() {
  clear_has_ttl();
  if (ttl_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ttl_;
    ttl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ServiceRouteRspVToV::set_allocated_ttl(::std::string* ttl) {
  if (ttl_ != &::google::protobuf::internal::kEmptyString) {
    delete ttl_;
  }
  if (ttl) {
    set_has_ttl();
    ttl_ = ttl;
  } else {
    clear_has_ttl();
    ttl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 ProtocolNo = 12;
inline bool ServiceRouteRspVToV::has_protocolno() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ServiceRouteRspVToV::set_has_protocolno() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ServiceRouteRspVToV::clear_has_protocolno() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ServiceRouteRspVToV::clear_protocolno() {
  protocolno_ = 0u;
  clear_has_protocolno();
}
inline ::google::protobuf::uint32 ServiceRouteRspVToV::protocolno() const {
  return protocolno_;
}
inline void ServiceRouteRspVToV::set_protocolno(::google::protobuf::uint32 value) {
  set_has_protocolno();
  protocolno_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dzh_bus_interface

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dzh_5fbus_5finterface_2eproto__INCLUDED
