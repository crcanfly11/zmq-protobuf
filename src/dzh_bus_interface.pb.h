// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dzh_bus_interface.proto

#ifndef PROTOBUF_dzh_5fbus_5finterface_2eproto__INCLUDED
#define PROTOBUF_dzh_5fbus_5finterface_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dzh_bus_interface {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

class Bus_Head;
class RspInfo;
class LoginReq;
class LoginRsp;
class LogoutReq;
class LogoutRsp;

// ===================================================================

class Bus_Head : public ::google::protobuf::Message {
 public:
  Bus_Head();
  virtual ~Bus_Head();

  Bus_Head(const Bus_Head& from);

  inline Bus_Head& operator=(const Bus_Head& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Bus_Head& default_instance();

  void Swap(Bus_Head* other);

  // implements Message ----------------------------------------------

  Bus_Head* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Bus_Head& from);
  void MergeFrom(const Bus_Head& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 RequestID = 1;
  inline bool has_requestid() const;
  inline void clear_requestid();
  static const int kRequestIDFieldNumber = 1;
  inline ::google::protobuf::uint32 requestid() const;
  inline void set_requestid(::google::protobuf::uint32 value);

  // optional uint32 ServiceNo = 2;
  inline bool has_serviceno() const;
  inline void clear_serviceno();
  static const int kServiceNoFieldNumber = 2;
  inline ::google::protobuf::uint32 serviceno() const;
  inline void set_serviceno(::google::protobuf::uint32 value);

  // optional uint32 Command = 3;
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 3;
  inline ::google::protobuf::uint32 command() const;
  inline void set_command(::google::protobuf::uint32 value);

  // optional bytes Data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional uint32 EndFlag = 5;
  inline bool has_endflag() const;
  inline void clear_endflag();
  static const int kEndFlagFieldNumber = 5;
  inline ::google::protobuf::uint32 endflag() const;
  inline void set_endflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.Bus_Head)
 private:
  inline void set_has_requestid();
  inline void clear_has_requestid();
  inline void set_has_serviceno();
  inline void clear_has_serviceno();
  inline void set_has_command();
  inline void clear_has_command();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_endflag();
  inline void clear_has_endflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 requestid_;
  ::google::protobuf::uint32 serviceno_;
  ::std::string* data_;
  ::google::protobuf::uint32 command_;
  ::google::protobuf::uint32 endflag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static Bus_Head* default_instance_;
};
// -------------------------------------------------------------------

class RspInfo : public ::google::protobuf::Message {
 public:
  RspInfo();
  virtual ~RspInfo();

  RspInfo(const RspInfo& from);

  inline RspInfo& operator=(const RspInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspInfo& default_instance();

  void Swap(RspInfo* other);

  // implements Message ----------------------------------------------

  RspInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspInfo& from);
  void MergeFrom(const RspInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 RspNo = 1;
  inline bool has_rspno() const;
  inline void clear_rspno();
  static const int kRspNoFieldNumber = 1;
  inline ::google::protobuf::uint32 rspno() const;
  inline void set_rspno(::google::protobuf::uint32 value);

  // optional string RspDesc = 2;
  inline bool has_rspdesc() const;
  inline void clear_rspdesc();
  static const int kRspDescFieldNumber = 2;
  inline const ::std::string& rspdesc() const;
  inline void set_rspdesc(const ::std::string& value);
  inline void set_rspdesc(const char* value);
  inline void set_rspdesc(const char* value, size_t size);
  inline ::std::string* mutable_rspdesc();
  inline ::std::string* release_rspdesc();
  inline void set_allocated_rspdesc(::std::string* rspdesc);

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.RspInfo)
 private:
  inline void set_has_rspno();
  inline void clear_has_rspno();
  inline void set_has_rspdesc();
  inline void clear_has_rspdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rspdesc_;
  ::google::protobuf::uint32 rspno_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static RspInfo* default_instance_;
};
// -------------------------------------------------------------------

class LoginReq : public ::google::protobuf::Message {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq& default_instance();

  void Swap(LoginReq* other);

  // implements Message ----------------------------------------------

  LoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ServiceNo = 1;
  inline int serviceno_size() const;
  inline void clear_serviceno();
  static const int kServiceNoFieldNumber = 1;
  inline ::google::protobuf::uint32 serviceno(int index) const;
  inline void set_serviceno(int index, ::google::protobuf::uint32 value);
  inline void add_serviceno(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      serviceno() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_serviceno();

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.LoginReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > serviceno_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static LoginReq* default_instance_;
};
// -------------------------------------------------------------------

class LoginRsp : public ::google::protobuf::Message {
 public:
  LoginRsp();
  virtual ~LoginRsp();

  LoginRsp(const LoginRsp& from);

  inline LoginRsp& operator=(const LoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRsp& default_instance();

  void Swap(LoginRsp* other);

  // implements Message ----------------------------------------------

  LoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRsp& from);
  void MergeFrom(const LoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .dzh_bus_interface.RspInfo rspInfo = 1;
  inline bool has_rspinfo() const;
  inline void clear_rspinfo();
  static const int kRspInfoFieldNumber = 1;
  inline const ::dzh_bus_interface::RspInfo& rspinfo() const;
  inline ::dzh_bus_interface::RspInfo* mutable_rspinfo();
  inline ::dzh_bus_interface::RspInfo* release_rspinfo();
  inline void set_allocated_rspinfo(::dzh_bus_interface::RspInfo* rspinfo);

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.LoginRsp)
 private:
  inline void set_has_rspinfo();
  inline void clear_has_rspinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::dzh_bus_interface::RspInfo* rspinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static LoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class LogoutReq : public ::google::protobuf::Message {
 public:
  LogoutReq();
  virtual ~LogoutReq();

  LogoutReq(const LogoutReq& from);

  inline LogoutReq& operator=(const LogoutReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutReq& default_instance();

  void Swap(LogoutReq* other);

  // implements Message ----------------------------------------------

  LogoutReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogoutReq& from);
  void MergeFrom(const LogoutReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.LogoutReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static LogoutReq* default_instance_;
};
// -------------------------------------------------------------------

class LogoutRsp : public ::google::protobuf::Message {
 public:
  LogoutRsp();
  virtual ~LogoutRsp();

  LogoutRsp(const LogoutRsp& from);

  inline LogoutRsp& operator=(const LogoutRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutRsp& default_instance();

  void Swap(LogoutRsp* other);

  // implements Message ----------------------------------------------

  LogoutRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogoutRsp& from);
  void MergeFrom(const LogoutRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .dzh_bus_interface.RspInfo rspInfo = 1;
  inline bool has_rspinfo() const;
  inline void clear_rspinfo();
  static const int kRspInfoFieldNumber = 1;
  inline const ::dzh_bus_interface::RspInfo& rspinfo() const;
  inline ::dzh_bus_interface::RspInfo* mutable_rspinfo();
  inline ::dzh_bus_interface::RspInfo* release_rspinfo();
  inline void set_allocated_rspinfo(::dzh_bus_interface::RspInfo* rspinfo);

  // @@protoc_insertion_point(class_scope:dzh_bus_interface.LogoutRsp)
 private:
  inline void set_has_rspinfo();
  inline void clear_has_rspinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::dzh_bus_interface::RspInfo* rspinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_AssignDesc_dzh_5fbus_5finterface_2eproto();
  friend void protobuf_ShutdownFile_dzh_5fbus_5finterface_2eproto();

  void InitAsDefaultInstance();
  static LogoutRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// Bus_Head

// required uint32 RequestID = 1;
inline bool Bus_Head::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Bus_Head::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Bus_Head::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Bus_Head::clear_requestid() {
  requestid_ = 0u;
  clear_has_requestid();
}
inline ::google::protobuf::uint32 Bus_Head::requestid() const {
  return requestid_;
}
inline void Bus_Head::set_requestid(::google::protobuf::uint32 value) {
  set_has_requestid();
  requestid_ = value;
}

// optional uint32 ServiceNo = 2;
inline bool Bus_Head::has_serviceno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Bus_Head::set_has_serviceno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Bus_Head::clear_has_serviceno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Bus_Head::clear_serviceno() {
  serviceno_ = 0u;
  clear_has_serviceno();
}
inline ::google::protobuf::uint32 Bus_Head::serviceno() const {
  return serviceno_;
}
inline void Bus_Head::set_serviceno(::google::protobuf::uint32 value) {
  set_has_serviceno();
  serviceno_ = value;
}

// optional uint32 Command = 3;
inline bool Bus_Head::has_command() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Bus_Head::set_has_command() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Bus_Head::clear_has_command() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Bus_Head::clear_command() {
  command_ = 0u;
  clear_has_command();
}
inline ::google::protobuf::uint32 Bus_Head::command() const {
  return command_;
}
inline void Bus_Head::set_command(::google::protobuf::uint32 value) {
  set_has_command();
  command_ = value;
}

// optional bytes Data = 4;
inline bool Bus_Head::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Bus_Head::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Bus_Head::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Bus_Head::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& Bus_Head::data() const {
  return *data_;
}
inline void Bus_Head::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void Bus_Head::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void Bus_Head::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Bus_Head::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* Bus_Head::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Bus_Head::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 EndFlag = 5;
inline bool Bus_Head::has_endflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Bus_Head::set_has_endflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Bus_Head::clear_has_endflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Bus_Head::clear_endflag() {
  endflag_ = 0u;
  clear_has_endflag();
}
inline ::google::protobuf::uint32 Bus_Head::endflag() const {
  return endflag_;
}
inline void Bus_Head::set_endflag(::google::protobuf::uint32 value) {
  set_has_endflag();
  endflag_ = value;
}

// -------------------------------------------------------------------

// RspInfo

// optional uint32 RspNo = 1;
inline bool RspInfo::has_rspno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspInfo::set_has_rspno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspInfo::clear_has_rspno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspInfo::clear_rspno() {
  rspno_ = 0u;
  clear_has_rspno();
}
inline ::google::protobuf::uint32 RspInfo::rspno() const {
  return rspno_;
}
inline void RspInfo::set_rspno(::google::protobuf::uint32 value) {
  set_has_rspno();
  rspno_ = value;
}

// optional string RspDesc = 2;
inline bool RspInfo::has_rspdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspInfo::set_has_rspdesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspInfo::clear_has_rspdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspInfo::clear_rspdesc() {
  if (rspdesc_ != &::google::protobuf::internal::kEmptyString) {
    rspdesc_->clear();
  }
  clear_has_rspdesc();
}
inline const ::std::string& RspInfo::rspdesc() const {
  return *rspdesc_;
}
inline void RspInfo::set_rspdesc(const ::std::string& value) {
  set_has_rspdesc();
  if (rspdesc_ == &::google::protobuf::internal::kEmptyString) {
    rspdesc_ = new ::std::string;
  }
  rspdesc_->assign(value);
}
inline void RspInfo::set_rspdesc(const char* value) {
  set_has_rspdesc();
  if (rspdesc_ == &::google::protobuf::internal::kEmptyString) {
    rspdesc_ = new ::std::string;
  }
  rspdesc_->assign(value);
}
inline void RspInfo::set_rspdesc(const char* value, size_t size) {
  set_has_rspdesc();
  if (rspdesc_ == &::google::protobuf::internal::kEmptyString) {
    rspdesc_ = new ::std::string;
  }
  rspdesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RspInfo::mutable_rspdesc() {
  set_has_rspdesc();
  if (rspdesc_ == &::google::protobuf::internal::kEmptyString) {
    rspdesc_ = new ::std::string;
  }
  return rspdesc_;
}
inline ::std::string* RspInfo::release_rspdesc() {
  clear_has_rspdesc();
  if (rspdesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rspdesc_;
    rspdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RspInfo::set_allocated_rspdesc(::std::string* rspdesc) {
  if (rspdesc_ != &::google::protobuf::internal::kEmptyString) {
    delete rspdesc_;
  }
  if (rspdesc) {
    set_has_rspdesc();
    rspdesc_ = rspdesc;
  } else {
    clear_has_rspdesc();
    rspdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// LoginReq

// repeated uint32 ServiceNo = 1;
inline int LoginReq::serviceno_size() const {
  return serviceno_.size();
}
inline void LoginReq::clear_serviceno() {
  serviceno_.Clear();
}
inline ::google::protobuf::uint32 LoginReq::serviceno(int index) const {
  return serviceno_.Get(index);
}
inline void LoginReq::set_serviceno(int index, ::google::protobuf::uint32 value) {
  serviceno_.Set(index, value);
}
inline void LoginReq::add_serviceno(::google::protobuf::uint32 value) {
  serviceno_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LoginReq::serviceno() const {
  return serviceno_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LoginReq::mutable_serviceno() {
  return &serviceno_;
}

// -------------------------------------------------------------------

// LoginRsp

// required .dzh_bus_interface.RspInfo rspInfo = 1;
inline bool LoginRsp::has_rspinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRsp::set_has_rspinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRsp::clear_has_rspinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRsp::clear_rspinfo() {
  if (rspinfo_ != NULL) rspinfo_->::dzh_bus_interface::RspInfo::Clear();
  clear_has_rspinfo();
}
inline const ::dzh_bus_interface::RspInfo& LoginRsp::rspinfo() const {
  return rspinfo_ != NULL ? *rspinfo_ : *default_instance_->rspinfo_;
}
inline ::dzh_bus_interface::RspInfo* LoginRsp::mutable_rspinfo() {
  set_has_rspinfo();
  if (rspinfo_ == NULL) rspinfo_ = new ::dzh_bus_interface::RspInfo;
  return rspinfo_;
}
inline ::dzh_bus_interface::RspInfo* LoginRsp::release_rspinfo() {
  clear_has_rspinfo();
  ::dzh_bus_interface::RspInfo* temp = rspinfo_;
  rspinfo_ = NULL;
  return temp;
}
inline void LoginRsp::set_allocated_rspinfo(::dzh_bus_interface::RspInfo* rspinfo) {
  delete rspinfo_;
  rspinfo_ = rspinfo;
  if (rspinfo) {
    set_has_rspinfo();
  } else {
    clear_has_rspinfo();
  }
}

// -------------------------------------------------------------------

// LogoutReq

// -------------------------------------------------------------------

// LogoutRsp

// required .dzh_bus_interface.RspInfo rspInfo = 1;
inline bool LogoutRsp::has_rspinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogoutRsp::set_has_rspinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogoutRsp::clear_has_rspinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogoutRsp::clear_rspinfo() {
  if (rspinfo_ != NULL) rspinfo_->::dzh_bus_interface::RspInfo::Clear();
  clear_has_rspinfo();
}
inline const ::dzh_bus_interface::RspInfo& LogoutRsp::rspinfo() const {
  return rspinfo_ != NULL ? *rspinfo_ : *default_instance_->rspinfo_;
}
inline ::dzh_bus_interface::RspInfo* LogoutRsp::mutable_rspinfo() {
  set_has_rspinfo();
  if (rspinfo_ == NULL) rspinfo_ = new ::dzh_bus_interface::RspInfo;
  return rspinfo_;
}
inline ::dzh_bus_interface::RspInfo* LogoutRsp::release_rspinfo() {
  clear_has_rspinfo();
  ::dzh_bus_interface::RspInfo* temp = rspinfo_;
  rspinfo_ = NULL;
  return temp;
}
inline void LogoutRsp::set_allocated_rspinfo(::dzh_bus_interface::RspInfo* rspinfo) {
  delete rspinfo_;
  rspinfo_ = rspinfo;
  if (rspinfo) {
    set_has_rspinfo();
  } else {
    clear_has_rspinfo();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dzh_bus_interface

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dzh_5fbus_5finterface_2eproto__INCLUDED
